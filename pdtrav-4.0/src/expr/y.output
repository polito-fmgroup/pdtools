

Terminals which are not used:

   PROCESS
   EU
   AU
   EBU
   ABU
   MINU
   MAXU
   DEFINE
   COMPUTE
   INVARSPEC
   ASSIGN
   INPUT
   OUTPUT
   BOOLEAN
   ARRAY
   OF
   SCALAR
   LLCB
   RRCB
   EQDEF
   QUOTE
   MMIN
   MMAX
   NEXT


Conflict in state 35 between rule 54 and token IMPLIES resolved as reduce.
Conflict in state 35 between rule 54 and token IFF resolved as reduce.
Conflict in state 35 between rule 54 and token OR resolved as reduce.
Conflict in state 35 between rule 54 and token AND resolved as reduce.
Conflict in state 35 between rule 54 and token EQUAL resolved as shift.
Conflict in state 35 between rule 54 and token LT resolved as shift.
Conflict in state 35 between rule 54 and token GT resolved as shift.
Conflict in state 35 between rule 54 and token LE resolved as shift.
Conflict in state 35 between rule 54 and token GE resolved as shift.
Conflict in state 35 between rule 54 and token UNION resolved as shift.
Conflict in state 35 between rule 54 and token SETIN resolved as shift.
Conflict in state 35 between rule 54 and token MOD resolved as shift.
Conflict in state 35 between rule 54 and token PLUS resolved as shift.
Conflict in state 35 between rule 54 and token MINUS resolved as shift.
Conflict in state 35 between rule 54 and token TIMES resolved as shift.
Conflict in state 35 between rule 54 and token DIVIDE resolved as shift.
Conflict in state 36 between rule 68 and token IMPLIES resolved as reduce.
Conflict in state 36 between rule 68 and token IFF resolved as reduce.
Conflict in state 36 between rule 68 and token OR resolved as reduce.
Conflict in state 36 between rule 68 and token AND resolved as reduce.
Conflict in state 36 between rule 68 and token EQUAL resolved as shift.
Conflict in state 36 between rule 68 and token LT resolved as shift.
Conflict in state 36 between rule 68 and token GT resolved as shift.
Conflict in state 36 between rule 68 and token LE resolved as shift.
Conflict in state 36 between rule 68 and token GE resolved as shift.
Conflict in state 36 between rule 68 and token UNION resolved as shift.
Conflict in state 36 between rule 68 and token SETIN resolved as shift.
Conflict in state 36 between rule 68 and token MOD resolved as shift.
Conflict in state 36 between rule 68 and token PLUS resolved as shift.
Conflict in state 36 between rule 68 and token MINUS resolved as shift.
Conflict in state 36 between rule 68 and token TIMES resolved as shift.
Conflict in state 36 between rule 68 and token DIVIDE resolved as shift.
Conflict in state 37 between rule 69 and token IMPLIES resolved as reduce.
Conflict in state 37 between rule 69 and token IFF resolved as reduce.
Conflict in state 37 between rule 69 and token OR resolved as reduce.
Conflict in state 37 between rule 69 and token AND resolved as reduce.
Conflict in state 37 between rule 69 and token EQUAL resolved as shift.
Conflict in state 37 between rule 69 and token LT resolved as shift.
Conflict in state 37 between rule 69 and token GT resolved as shift.
Conflict in state 37 between rule 69 and token LE resolved as shift.
Conflict in state 37 between rule 69 and token GE resolved as shift.
Conflict in state 37 between rule 69 and token UNION resolved as shift.
Conflict in state 37 between rule 69 and token SETIN resolved as shift.
Conflict in state 37 between rule 69 and token MOD resolved as shift.
Conflict in state 37 between rule 69 and token PLUS resolved as shift.
Conflict in state 37 between rule 69 and token MINUS resolved as shift.
Conflict in state 37 between rule 69 and token TIMES resolved as shift.
Conflict in state 37 between rule 69 and token DIVIDE resolved as shift.
Conflict in state 38 between rule 70 and token IMPLIES resolved as reduce.
Conflict in state 38 between rule 70 and token IFF resolved as reduce.
Conflict in state 38 between rule 70 and token OR resolved as reduce.
Conflict in state 38 between rule 70 and token AND resolved as reduce.
Conflict in state 38 between rule 70 and token EQUAL resolved as shift.
Conflict in state 38 between rule 70 and token LT resolved as shift.
Conflict in state 38 between rule 70 and token GT resolved as shift.
Conflict in state 38 between rule 70 and token LE resolved as shift.
Conflict in state 38 between rule 70 and token GE resolved as shift.
Conflict in state 38 between rule 70 and token UNION resolved as shift.
Conflict in state 38 between rule 70 and token SETIN resolved as shift.
Conflict in state 38 between rule 70 and token MOD resolved as shift.
Conflict in state 38 between rule 70 and token PLUS resolved as shift.
Conflict in state 38 between rule 70 and token MINUS resolved as shift.
Conflict in state 38 between rule 70 and token TIMES resolved as shift.
Conflict in state 38 between rule 70 and token DIVIDE resolved as shift.
Conflict in state 39 between rule 71 and token IMPLIES resolved as reduce.
Conflict in state 39 between rule 71 and token IFF resolved as reduce.
Conflict in state 39 between rule 71 and token OR resolved as reduce.
Conflict in state 39 between rule 71 and token AND resolved as reduce.
Conflict in state 39 between rule 71 and token EQUAL resolved as shift.
Conflict in state 39 between rule 71 and token LT resolved as shift.
Conflict in state 39 between rule 71 and token GT resolved as shift.
Conflict in state 39 between rule 71 and token LE resolved as shift.
Conflict in state 39 between rule 71 and token GE resolved as shift.
Conflict in state 39 between rule 71 and token UNION resolved as shift.
Conflict in state 39 between rule 71 and token SETIN resolved as shift.
Conflict in state 39 between rule 71 and token MOD resolved as shift.
Conflict in state 39 between rule 71 and token PLUS resolved as shift.
Conflict in state 39 between rule 71 and token MINUS resolved as shift.
Conflict in state 39 between rule 71 and token TIMES resolved as shift.
Conflict in state 39 between rule 71 and token DIVIDE resolved as shift.
Conflict in state 40 between rule 72 and token IMPLIES resolved as reduce.
Conflict in state 40 between rule 72 and token IFF resolved as reduce.
Conflict in state 40 between rule 72 and token OR resolved as reduce.
Conflict in state 40 between rule 72 and token AND resolved as reduce.
Conflict in state 40 between rule 72 and token EQUAL resolved as shift.
Conflict in state 40 between rule 72 and token LT resolved as shift.
Conflict in state 40 between rule 72 and token GT resolved as shift.
Conflict in state 40 between rule 72 and token LE resolved as shift.
Conflict in state 40 between rule 72 and token GE resolved as shift.
Conflict in state 40 between rule 72 and token UNION resolved as shift.
Conflict in state 40 between rule 72 and token SETIN resolved as shift.
Conflict in state 40 between rule 72 and token MOD resolved as shift.
Conflict in state 40 between rule 72 and token PLUS resolved as shift.
Conflict in state 40 between rule 72 and token MINUS resolved as shift.
Conflict in state 40 between rule 72 and token TIMES resolved as shift.
Conflict in state 40 between rule 72 and token DIVIDE resolved as shift.
Conflict in state 41 between rule 73 and token IMPLIES resolved as reduce.
Conflict in state 41 between rule 73 and token IFF resolved as reduce.
Conflict in state 41 between rule 73 and token OR resolved as reduce.
Conflict in state 41 between rule 73 and token AND resolved as reduce.
Conflict in state 41 between rule 73 and token EQUAL resolved as shift.
Conflict in state 41 between rule 73 and token LT resolved as shift.
Conflict in state 41 between rule 73 and token GT resolved as shift.
Conflict in state 41 between rule 73 and token LE resolved as shift.
Conflict in state 41 between rule 73 and token GE resolved as shift.
Conflict in state 41 between rule 73 and token UNION resolved as shift.
Conflict in state 41 between rule 73 and token SETIN resolved as shift.
Conflict in state 41 between rule 73 and token MOD resolved as shift.
Conflict in state 41 between rule 73 and token PLUS resolved as shift.
Conflict in state 41 between rule 73 and token MINUS resolved as shift.
Conflict in state 41 between rule 73 and token TIMES resolved as shift.
Conflict in state 41 between rule 73 and token DIVIDE resolved as shift.
Conflict in state 75 between rule 78 and token IMPLIES resolved as reduce.
Conflict in state 75 between rule 78 and token IFF resolved as reduce.
Conflict in state 75 between rule 78 and token OR resolved as reduce.
Conflict in state 75 between rule 78 and token AND resolved as reduce.
Conflict in state 75 between rule 78 and token EQUAL resolved as shift.
Conflict in state 75 between rule 78 and token LT resolved as shift.
Conflict in state 75 between rule 78 and token GT resolved as shift.
Conflict in state 75 between rule 78 and token LE resolved as shift.
Conflict in state 75 between rule 78 and token GE resolved as shift.
Conflict in state 75 between rule 78 and token UNION resolved as shift.
Conflict in state 75 between rule 78 and token SETIN resolved as shift.
Conflict in state 75 between rule 78 and token MOD resolved as shift.
Conflict in state 75 between rule 78 and token PLUS resolved as shift.
Conflict in state 75 between rule 78 and token MINUS resolved as shift.
Conflict in state 75 between rule 78 and token TIMES resolved as shift.
Conflict in state 75 between rule 78 and token DIVIDE resolved as shift.
Conflict in state 76 between rule 80 and token IMPLIES resolved as reduce.
Conflict in state 76 between rule 80 and token IFF resolved as reduce.
Conflict in state 76 between rule 80 and token OR resolved as reduce.
Conflict in state 76 between rule 80 and token AND resolved as reduce.
Conflict in state 76 between rule 80 and token EQUAL resolved as shift.
Conflict in state 76 between rule 80 and token LT resolved as shift.
Conflict in state 76 between rule 80 and token GT resolved as shift.
Conflict in state 76 between rule 80 and token LE resolved as shift.
Conflict in state 76 between rule 80 and token GE resolved as shift.
Conflict in state 76 between rule 80 and token UNION resolved as shift.
Conflict in state 76 between rule 80 and token SETIN resolved as shift.
Conflict in state 76 between rule 80 and token MOD resolved as shift.
Conflict in state 76 between rule 80 and token PLUS resolved as shift.
Conflict in state 76 between rule 80 and token MINUS resolved as shift.
Conflict in state 76 between rule 80 and token TIMES resolved as shift.
Conflict in state 76 between rule 80 and token DIVIDE resolved as shift.
Conflict in state 77 between rule 79 and token IMPLIES resolved as reduce.
Conflict in state 77 between rule 79 and token IFF resolved as reduce.
Conflict in state 77 between rule 79 and token OR resolved as reduce.
Conflict in state 77 between rule 79 and token AND resolved as reduce.
Conflict in state 77 between rule 79 and token EQUAL resolved as shift.
Conflict in state 77 between rule 79 and token LT resolved as shift.
Conflict in state 77 between rule 79 and token GT resolved as shift.
Conflict in state 77 between rule 79 and token LE resolved as shift.
Conflict in state 77 between rule 79 and token GE resolved as shift.
Conflict in state 77 between rule 79 and token UNION resolved as shift.
Conflict in state 77 between rule 79 and token SETIN resolved as shift.
Conflict in state 77 between rule 79 and token MOD resolved as shift.
Conflict in state 77 between rule 79 and token PLUS resolved as shift.
Conflict in state 77 between rule 79 and token MINUS resolved as shift.
Conflict in state 77 between rule 79 and token TIMES resolved as shift.
Conflict in state 77 between rule 79 and token DIVIDE resolved as shift.
Conflict in state 78 between rule 81 and token IMPLIES resolved as reduce.
Conflict in state 78 between rule 81 and token IFF resolved as reduce.
Conflict in state 78 between rule 81 and token OR resolved as reduce.
Conflict in state 78 between rule 81 and token AND resolved as reduce.
Conflict in state 78 between rule 81 and token EQUAL resolved as shift.
Conflict in state 78 between rule 81 and token LT resolved as shift.
Conflict in state 78 between rule 81 and token GT resolved as shift.
Conflict in state 78 between rule 81 and token LE resolved as shift.
Conflict in state 78 between rule 81 and token GE resolved as shift.
Conflict in state 78 between rule 81 and token UNION resolved as shift.
Conflict in state 78 between rule 81 and token SETIN resolved as shift.
Conflict in state 78 between rule 81 and token MOD resolved as shift.
Conflict in state 78 between rule 81 and token PLUS resolved as shift.
Conflict in state 78 between rule 81 and token MINUS resolved as shift.
Conflict in state 78 between rule 81 and token TIMES resolved as shift.
Conflict in state 78 between rule 81 and token DIVIDE resolved as shift.
Conflict in state 92 between rule 50 and token IMPLIES resolved as shift.
Conflict in state 92 between rule 50 and token IFF resolved as shift.
Conflict in state 92 between rule 50 and token OR resolved as shift.
Conflict in state 92 between rule 50 and token AND resolved as shift.
Conflict in state 92 between rule 50 and token EQUAL resolved as shift.
Conflict in state 92 between rule 50 and token LT resolved as shift.
Conflict in state 92 between rule 50 and token GT resolved as shift.
Conflict in state 92 between rule 50 and token LE resolved as shift.
Conflict in state 92 between rule 50 and token GE resolved as shift.
Conflict in state 92 between rule 50 and token UNION resolved as shift.
Conflict in state 92 between rule 50 and token SETIN resolved as shift.
Conflict in state 92 between rule 50 and token MOD resolved as shift.
Conflict in state 92 between rule 50 and token PLUS resolved as shift.
Conflict in state 92 between rule 50 and token MINUS resolved as shift.
Conflict in state 92 between rule 50 and token TIMES resolved as shift.
Conflict in state 92 between rule 50 and token DIVIDE resolved as shift.
Conflict in state 93 between rule 51 and token IMPLIES resolved as reduce.
Conflict in state 93 between rule 51 and token IFF resolved as reduce.
Conflict in state 93 between rule 51 and token OR resolved as shift.
Conflict in state 93 between rule 51 and token AND resolved as shift.
Conflict in state 93 between rule 51 and token EQUAL resolved as shift.
Conflict in state 93 between rule 51 and token LT resolved as shift.
Conflict in state 93 between rule 51 and token GT resolved as shift.
Conflict in state 93 between rule 51 and token LE resolved as shift.
Conflict in state 93 between rule 51 and token GE resolved as shift.
Conflict in state 93 between rule 51 and token UNION resolved as shift.
Conflict in state 93 between rule 51 and token SETIN resolved as shift.
Conflict in state 93 between rule 51 and token MOD resolved as shift.
Conflict in state 93 between rule 51 and token PLUS resolved as shift.
Conflict in state 93 between rule 51 and token MINUS resolved as shift.
Conflict in state 93 between rule 51 and token TIMES resolved as shift.
Conflict in state 93 between rule 51 and token DIVIDE resolved as shift.
Conflict in state 94 between rule 52 and token IMPLIES resolved as reduce.
Conflict in state 94 between rule 52 and token IFF resolved as reduce.
Conflict in state 94 between rule 52 and token OR resolved as reduce.
Conflict in state 94 between rule 52 and token AND resolved as shift.
Conflict in state 94 between rule 52 and token EQUAL resolved as shift.
Conflict in state 94 between rule 52 and token LT resolved as shift.
Conflict in state 94 between rule 52 and token GT resolved as shift.
Conflict in state 94 between rule 52 and token LE resolved as shift.
Conflict in state 94 between rule 52 and token GE resolved as shift.
Conflict in state 94 between rule 52 and token UNION resolved as shift.
Conflict in state 94 between rule 52 and token SETIN resolved as shift.
Conflict in state 94 between rule 52 and token MOD resolved as shift.
Conflict in state 94 between rule 52 and token PLUS resolved as shift.
Conflict in state 94 between rule 52 and token MINUS resolved as shift.
Conflict in state 94 between rule 52 and token TIMES resolved as shift.
Conflict in state 94 between rule 52 and token DIVIDE resolved as shift.
Conflict in state 95 between rule 53 and token IMPLIES resolved as reduce.
Conflict in state 95 between rule 53 and token IFF resolved as reduce.
Conflict in state 95 between rule 53 and token OR resolved as reduce.
Conflict in state 95 between rule 53 and token AND resolved as reduce.
Conflict in state 95 between rule 53 and token EQUAL resolved as shift.
Conflict in state 95 between rule 53 and token LT resolved as shift.
Conflict in state 95 between rule 53 and token GT resolved as shift.
Conflict in state 95 between rule 53 and token LE resolved as shift.
Conflict in state 95 between rule 53 and token GE resolved as shift.
Conflict in state 95 between rule 53 and token UNION resolved as shift.
Conflict in state 95 between rule 53 and token SETIN resolved as shift.
Conflict in state 95 between rule 53 and token MOD resolved as shift.
Conflict in state 95 between rule 53 and token PLUS resolved as shift.
Conflict in state 95 between rule 53 and token MINUS resolved as shift.
Conflict in state 95 between rule 53 and token TIMES resolved as shift.
Conflict in state 95 between rule 53 and token DIVIDE resolved as shift.
Conflict in state 96 between rule 60 and token IMPLIES resolved as reduce.
Conflict in state 96 between rule 60 and token IFF resolved as reduce.
Conflict in state 96 between rule 60 and token OR resolved as reduce.
Conflict in state 96 between rule 60 and token AND resolved as reduce.
Conflict in state 96 between rule 60 and token EQUAL resolved as reduce.
Conflict in state 96 between rule 60 and token LT resolved as reduce.
Conflict in state 96 between rule 60 and token GT resolved as reduce.
Conflict in state 96 between rule 60 and token LE resolved as reduce.
Conflict in state 96 between rule 60 and token GE resolved as reduce.
Conflict in state 96 between rule 60 and token UNION resolved as shift.
Conflict in state 96 between rule 60 and token SETIN resolved as shift.
Conflict in state 96 between rule 60 and token MOD resolved as shift.
Conflict in state 96 between rule 60 and token PLUS resolved as shift.
Conflict in state 96 between rule 60 and token MINUS resolved as shift.
Conflict in state 96 between rule 60 and token TIMES resolved as shift.
Conflict in state 96 between rule 60 and token DIVIDE resolved as shift.
Conflict in state 97 between rule 61 and token IMPLIES resolved as reduce.
Conflict in state 97 between rule 61 and token IFF resolved as reduce.
Conflict in state 97 between rule 61 and token OR resolved as reduce.
Conflict in state 97 between rule 61 and token AND resolved as reduce.
Conflict in state 97 between rule 61 and token EQUAL resolved as reduce.
Conflict in state 97 between rule 61 and token LT resolved as reduce.
Conflict in state 97 between rule 61 and token GT resolved as reduce.
Conflict in state 97 between rule 61 and token LE resolved as reduce.
Conflict in state 97 between rule 61 and token GE resolved as reduce.
Conflict in state 97 between rule 61 and token UNION resolved as shift.
Conflict in state 97 between rule 61 and token SETIN resolved as shift.
Conflict in state 97 between rule 61 and token MOD resolved as shift.
Conflict in state 97 between rule 61 and token PLUS resolved as shift.
Conflict in state 97 between rule 61 and token MINUS resolved as shift.
Conflict in state 97 between rule 61 and token TIMES resolved as shift.
Conflict in state 97 between rule 61 and token DIVIDE resolved as shift.
Conflict in state 98 between rule 62 and token IMPLIES resolved as reduce.
Conflict in state 98 between rule 62 and token IFF resolved as reduce.
Conflict in state 98 between rule 62 and token OR resolved as reduce.
Conflict in state 98 between rule 62 and token AND resolved as reduce.
Conflict in state 98 between rule 62 and token EQUAL resolved as reduce.
Conflict in state 98 between rule 62 and token LT resolved as reduce.
Conflict in state 98 between rule 62 and token GT resolved as reduce.
Conflict in state 98 between rule 62 and token LE resolved as reduce.
Conflict in state 98 between rule 62 and token GE resolved as reduce.
Conflict in state 98 between rule 62 and token UNION resolved as shift.
Conflict in state 98 between rule 62 and token SETIN resolved as shift.
Conflict in state 98 between rule 62 and token MOD resolved as shift.
Conflict in state 98 between rule 62 and token PLUS resolved as shift.
Conflict in state 98 between rule 62 and token MINUS resolved as shift.
Conflict in state 98 between rule 62 and token TIMES resolved as shift.
Conflict in state 98 between rule 62 and token DIVIDE resolved as shift.
Conflict in state 99 between rule 63 and token IMPLIES resolved as reduce.
Conflict in state 99 between rule 63 and token IFF resolved as reduce.
Conflict in state 99 between rule 63 and token OR resolved as reduce.
Conflict in state 99 between rule 63 and token AND resolved as reduce.
Conflict in state 99 between rule 63 and token EQUAL resolved as reduce.
Conflict in state 99 between rule 63 and token LT resolved as reduce.
Conflict in state 99 between rule 63 and token GT resolved as reduce.
Conflict in state 99 between rule 63 and token LE resolved as reduce.
Conflict in state 99 between rule 63 and token GE resolved as reduce.
Conflict in state 99 between rule 63 and token UNION resolved as shift.
Conflict in state 99 between rule 63 and token SETIN resolved as shift.
Conflict in state 99 between rule 63 and token MOD resolved as shift.
Conflict in state 99 between rule 63 and token PLUS resolved as shift.
Conflict in state 99 between rule 63 and token MINUS resolved as shift.
Conflict in state 99 between rule 63 and token TIMES resolved as shift.
Conflict in state 99 between rule 63 and token DIVIDE resolved as shift.
Conflict in state 100 between rule 64 and token IMPLIES resolved as reduce.
Conflict in state 100 between rule 64 and token IFF resolved as reduce.
Conflict in state 100 between rule 64 and token OR resolved as reduce.
Conflict in state 100 between rule 64 and token AND resolved as reduce.
Conflict in state 100 between rule 64 and token EQUAL resolved as reduce.
Conflict in state 100 between rule 64 and token LT resolved as reduce.
Conflict in state 100 between rule 64 and token GT resolved as reduce.
Conflict in state 100 between rule 64 and token LE resolved as reduce.
Conflict in state 100 between rule 64 and token GE resolved as reduce.
Conflict in state 100 between rule 64 and token UNION resolved as shift.
Conflict in state 100 between rule 64 and token SETIN resolved as shift.
Conflict in state 100 between rule 64 and token MOD resolved as shift.
Conflict in state 100 between rule 64 and token PLUS resolved as shift.
Conflict in state 100 between rule 64 and token MINUS resolved as shift.
Conflict in state 100 between rule 64 and token TIMES resolved as shift.
Conflict in state 100 between rule 64 and token DIVIDE resolved as shift.
Conflict in state 101 between rule 66 and token IMPLIES resolved as reduce.
Conflict in state 101 between rule 66 and token IFF resolved as reduce.
Conflict in state 101 between rule 66 and token OR resolved as reduce.
Conflict in state 101 between rule 66 and token AND resolved as reduce.
Conflict in state 101 between rule 66 and token EQUAL resolved as reduce.
Conflict in state 101 between rule 66 and token LT resolved as reduce.
Conflict in state 101 between rule 66 and token GT resolved as reduce.
Conflict in state 101 between rule 66 and token LE resolved as reduce.
Conflict in state 101 between rule 66 and token GE resolved as reduce.
Conflict in state 101 between rule 66 and token UNION resolved as reduce.
Conflict in state 101 between rule 66 and token SETIN resolved as shift.
Conflict in state 101 between rule 66 and token MOD resolved as shift.
Conflict in state 101 between rule 66 and token PLUS resolved as shift.
Conflict in state 101 between rule 66 and token MINUS resolved as shift.
Conflict in state 101 between rule 66 and token TIMES resolved as shift.
Conflict in state 101 between rule 66 and token DIVIDE resolved as shift.
Conflict in state 102 between rule 67 and token IMPLIES resolved as reduce.
Conflict in state 102 between rule 67 and token IFF resolved as reduce.
Conflict in state 102 between rule 67 and token OR resolved as reduce.
Conflict in state 102 between rule 67 and token AND resolved as reduce.
Conflict in state 102 between rule 67 and token EQUAL resolved as reduce.
Conflict in state 102 between rule 67 and token LT resolved as reduce.
Conflict in state 102 between rule 67 and token GT resolved as reduce.
Conflict in state 102 between rule 67 and token LE resolved as reduce.
Conflict in state 102 between rule 67 and token GE resolved as reduce.
Conflict in state 102 between rule 67 and token UNION resolved as reduce.
Conflict in state 102 between rule 67 and token SETIN resolved as reduce.
Conflict in state 102 between rule 67 and token MOD resolved as shift.
Conflict in state 102 between rule 67 and token PLUS resolved as shift.
Conflict in state 102 between rule 67 and token MINUS resolved as shift.
Conflict in state 102 between rule 67 and token TIMES resolved as shift.
Conflict in state 102 between rule 67 and token DIVIDE resolved as shift.
Conflict in state 103 between rule 59 and token IMPLIES resolved as reduce.
Conflict in state 103 between rule 59 and token IFF resolved as reduce.
Conflict in state 103 between rule 59 and token OR resolved as reduce.
Conflict in state 103 between rule 59 and token AND resolved as reduce.
Conflict in state 103 between rule 59 and token EQUAL resolved as reduce.
Conflict in state 103 between rule 59 and token LT resolved as reduce.
Conflict in state 103 between rule 59 and token GT resolved as reduce.
Conflict in state 103 between rule 59 and token LE resolved as reduce.
Conflict in state 103 between rule 59 and token GE resolved as reduce.
Conflict in state 103 between rule 59 and token UNION resolved as reduce.
Conflict in state 103 between rule 59 and token SETIN resolved as reduce.
Conflict in state 103 between rule 59 and token MOD resolved as reduce.
Conflict in state 103 between rule 59 and token PLUS resolved as shift.
Conflict in state 103 between rule 59 and token MINUS resolved as shift.
Conflict in state 103 between rule 59 and token TIMES resolved as shift.
Conflict in state 103 between rule 59 and token DIVIDE resolved as shift.
Conflict in state 104 between rule 55 and token IMPLIES resolved as reduce.
Conflict in state 104 between rule 55 and token IFF resolved as reduce.
Conflict in state 104 between rule 55 and token OR resolved as reduce.
Conflict in state 104 between rule 55 and token AND resolved as reduce.
Conflict in state 104 between rule 55 and token EQUAL resolved as reduce.
Conflict in state 104 between rule 55 and token LT resolved as reduce.
Conflict in state 104 between rule 55 and token GT resolved as reduce.
Conflict in state 104 between rule 55 and token LE resolved as reduce.
Conflict in state 104 between rule 55 and token GE resolved as reduce.
Conflict in state 104 between rule 55 and token UNION resolved as reduce.
Conflict in state 104 between rule 55 and token SETIN resolved as reduce.
Conflict in state 104 between rule 55 and token MOD resolved as reduce.
Conflict in state 104 between rule 55 and token PLUS resolved as reduce.
Conflict in state 104 between rule 55 and token MINUS resolved as reduce.
Conflict in state 104 between rule 55 and token TIMES resolved as shift.
Conflict in state 104 between rule 55 and token DIVIDE resolved as shift.
Conflict in state 105 between rule 56 and token IMPLIES resolved as reduce.
Conflict in state 105 between rule 56 and token IFF resolved as reduce.
Conflict in state 105 between rule 56 and token OR resolved as reduce.
Conflict in state 105 between rule 56 and token AND resolved as reduce.
Conflict in state 105 between rule 56 and token EQUAL resolved as reduce.
Conflict in state 105 between rule 56 and token LT resolved as reduce.
Conflict in state 105 between rule 56 and token GT resolved as reduce.
Conflict in state 105 between rule 56 and token LE resolved as reduce.
Conflict in state 105 between rule 56 and token GE resolved as reduce.
Conflict in state 105 between rule 56 and token UNION resolved as reduce.
Conflict in state 105 between rule 56 and token SETIN resolved as reduce.
Conflict in state 105 between rule 56 and token MOD resolved as reduce.
Conflict in state 105 between rule 56 and token PLUS resolved as reduce.
Conflict in state 105 between rule 56 and token MINUS resolved as reduce.
Conflict in state 105 between rule 56 and token TIMES resolved as shift.
Conflict in state 105 between rule 56 and token DIVIDE resolved as shift.
Conflict in state 106 between rule 57 and token IMPLIES resolved as reduce.
Conflict in state 106 between rule 57 and token IFF resolved as reduce.
Conflict in state 106 between rule 57 and token OR resolved as reduce.
Conflict in state 106 between rule 57 and token AND resolved as reduce.
Conflict in state 106 between rule 57 and token EQUAL resolved as reduce.
Conflict in state 106 between rule 57 and token LT resolved as reduce.
Conflict in state 106 between rule 57 and token GT resolved as reduce.
Conflict in state 106 between rule 57 and token LE resolved as reduce.
Conflict in state 106 between rule 57 and token GE resolved as reduce.
Conflict in state 106 between rule 57 and token UNION resolved as reduce.
Conflict in state 106 between rule 57 and token SETIN resolved as reduce.
Conflict in state 106 between rule 57 and token MOD resolved as reduce.
Conflict in state 106 between rule 57 and token PLUS resolved as reduce.
Conflict in state 106 between rule 57 and token MINUS resolved as reduce.
Conflict in state 106 between rule 57 and token TIMES resolved as reduce.
Conflict in state 106 between rule 57 and token DIVIDE resolved as reduce.
Conflict in state 107 between rule 58 and token IMPLIES resolved as reduce.
Conflict in state 107 between rule 58 and token IFF resolved as reduce.
Conflict in state 107 between rule 58 and token OR resolved as reduce.
Conflict in state 107 between rule 58 and token AND resolved as reduce.
Conflict in state 107 between rule 58 and token EQUAL resolved as reduce.
Conflict in state 107 between rule 58 and token LT resolved as reduce.
Conflict in state 107 between rule 58 and token GT resolved as reduce.
Conflict in state 107 between rule 58 and token LE resolved as reduce.
Conflict in state 107 between rule 58 and token GE resolved as reduce.
Conflict in state 107 between rule 58 and token UNION resolved as reduce.
Conflict in state 107 between rule 58 and token SETIN resolved as reduce.
Conflict in state 107 between rule 58 and token MOD resolved as reduce.
Conflict in state 107 between rule 58 and token PLUS resolved as reduce.
Conflict in state 107 between rule 58 and token MINUS resolved as reduce.
Conflict in state 107 between rule 58 and token TIMES resolved as reduce.
Conflict in state 107 between rule 58 and token DIVIDE resolved as reduce.
Conflict in state 118 between rule 24 and token IMPLIES resolved as reduce.
Conflict in state 118 between rule 24 and token IFF resolved as reduce.
Conflict in state 118 between rule 24 and token OR resolved as reduce.
Conflict in state 118 between rule 24 and token AND resolved as reduce.
Conflict in state 118 between rule 24 and token EQUAL resolved as shift.
Conflict in state 118 between rule 24 and token LT resolved as shift.
Conflict in state 118 between rule 24 and token GT resolved as shift.
Conflict in state 118 between rule 24 and token LE resolved as shift.
Conflict in state 118 between rule 24 and token GE resolved as shift.
Conflict in state 118 between rule 24 and token UNION resolved as shift.
Conflict in state 118 between rule 24 and token SETIN resolved as shift.
Conflict in state 118 between rule 24 and token MOD resolved as shift.
Conflict in state 118 between rule 24 and token PLUS resolved as shift.
Conflict in state 118 between rule 24 and token MINUS resolved as shift.
Conflict in state 118 between rule 24 and token TIMES resolved as shift.
Conflict in state 118 between rule 24 and token DIVIDE resolved as shift.
Conflict in state 145 between rule 20 and token IMPLIES resolved as shift.
Conflict in state 145 between rule 20 and token IFF resolved as shift.
Conflict in state 145 between rule 20 and token OR resolved as shift.
Conflict in state 145 between rule 20 and token AND resolved as shift.
Conflict in state 145 between rule 20 and token EQUAL resolved as shift.
Conflict in state 145 between rule 20 and token LT resolved as shift.
Conflict in state 145 between rule 20 and token GT resolved as shift.
Conflict in state 145 between rule 20 and token LE resolved as shift.
Conflict in state 145 between rule 20 and token GE resolved as shift.
Conflict in state 145 between rule 20 and token UNION resolved as shift.
Conflict in state 145 between rule 20 and token SETIN resolved as shift.
Conflict in state 145 between rule 20 and token MOD resolved as shift.
Conflict in state 145 between rule 20 and token PLUS resolved as shift.
Conflict in state 145 between rule 20 and token MINUS resolved as shift.
Conflict in state 145 between rule 20 and token TIMES resolved as shift.
Conflict in state 145 between rule 20 and token DIVIDE resolved as shift.
Conflict in state 146 between rule 21 and token IMPLIES resolved as reduce.
Conflict in state 146 between rule 21 and token IFF resolved as reduce.
Conflict in state 146 between rule 21 and token OR resolved as shift.
Conflict in state 146 between rule 21 and token AND resolved as shift.
Conflict in state 146 between rule 21 and token EQUAL resolved as shift.
Conflict in state 146 between rule 21 and token LT resolved as shift.
Conflict in state 146 between rule 21 and token GT resolved as shift.
Conflict in state 146 between rule 21 and token LE resolved as shift.
Conflict in state 146 between rule 21 and token GE resolved as shift.
Conflict in state 146 between rule 21 and token UNION resolved as shift.
Conflict in state 146 between rule 21 and token SETIN resolved as shift.
Conflict in state 146 between rule 21 and token MOD resolved as shift.
Conflict in state 146 between rule 21 and token PLUS resolved as shift.
Conflict in state 146 between rule 21 and token MINUS resolved as shift.
Conflict in state 146 between rule 21 and token TIMES resolved as shift.
Conflict in state 146 between rule 21 and token DIVIDE resolved as shift.
Conflict in state 147 between rule 22 and token IMPLIES resolved as reduce.
Conflict in state 147 between rule 22 and token IFF resolved as reduce.
Conflict in state 147 between rule 22 and token OR resolved as reduce.
Conflict in state 147 between rule 22 and token AND resolved as shift.
Conflict in state 147 between rule 22 and token EQUAL resolved as shift.
Conflict in state 147 between rule 22 and token LT resolved as shift.
Conflict in state 147 between rule 22 and token GT resolved as shift.
Conflict in state 147 between rule 22 and token LE resolved as shift.
Conflict in state 147 between rule 22 and token GE resolved as shift.
Conflict in state 147 between rule 22 and token UNION resolved as shift.
Conflict in state 147 between rule 22 and token SETIN resolved as shift.
Conflict in state 147 between rule 22 and token MOD resolved as shift.
Conflict in state 147 between rule 22 and token PLUS resolved as shift.
Conflict in state 147 between rule 22 and token MINUS resolved as shift.
Conflict in state 147 between rule 22 and token TIMES resolved as shift.
Conflict in state 147 between rule 22 and token DIVIDE resolved as shift.
Conflict in state 148 between rule 23 and token IMPLIES resolved as reduce.
Conflict in state 148 between rule 23 and token IFF resolved as reduce.
Conflict in state 148 between rule 23 and token OR resolved as reduce.
Conflict in state 148 between rule 23 and token AND resolved as reduce.
Conflict in state 148 between rule 23 and token EQUAL resolved as shift.
Conflict in state 148 between rule 23 and token LT resolved as shift.
Conflict in state 148 between rule 23 and token GT resolved as shift.
Conflict in state 148 between rule 23 and token LE resolved as shift.
Conflict in state 148 between rule 23 and token GE resolved as shift.
Conflict in state 148 between rule 23 and token UNION resolved as shift.
Conflict in state 148 between rule 23 and token SETIN resolved as shift.
Conflict in state 148 between rule 23 and token MOD resolved as shift.
Conflict in state 148 between rule 23 and token PLUS resolved as shift.
Conflict in state 148 between rule 23 and token MINUS resolved as shift.
Conflict in state 148 between rule 23 and token TIMES resolved as shift.
Conflict in state 148 between rule 23 and token DIVIDE resolved as shift.
Conflict in state 149 between rule 30 and token IMPLIES resolved as reduce.
Conflict in state 149 between rule 30 and token IFF resolved as reduce.
Conflict in state 149 between rule 30 and token OR resolved as reduce.
Conflict in state 149 between rule 30 and token AND resolved as reduce.
Conflict in state 149 between rule 30 and token EQUAL resolved as reduce.
Conflict in state 149 between rule 30 and token LT resolved as reduce.
Conflict in state 149 between rule 30 and token GT resolved as reduce.
Conflict in state 149 between rule 30 and token LE resolved as reduce.
Conflict in state 149 between rule 30 and token GE resolved as reduce.
Conflict in state 149 between rule 30 and token UNION resolved as shift.
Conflict in state 149 between rule 30 and token SETIN resolved as shift.
Conflict in state 149 between rule 30 and token MOD resolved as shift.
Conflict in state 149 between rule 30 and token PLUS resolved as shift.
Conflict in state 149 between rule 30 and token MINUS resolved as shift.
Conflict in state 149 between rule 30 and token TIMES resolved as shift.
Conflict in state 149 between rule 30 and token DIVIDE resolved as shift.
Conflict in state 150 between rule 31 and token IMPLIES resolved as reduce.
Conflict in state 150 between rule 31 and token IFF resolved as reduce.
Conflict in state 150 between rule 31 and token OR resolved as reduce.
Conflict in state 150 between rule 31 and token AND resolved as reduce.
Conflict in state 150 between rule 31 and token EQUAL resolved as reduce.
Conflict in state 150 between rule 31 and token LT resolved as reduce.
Conflict in state 150 between rule 31 and token GT resolved as reduce.
Conflict in state 150 between rule 31 and token LE resolved as reduce.
Conflict in state 150 between rule 31 and token GE resolved as reduce.
Conflict in state 150 between rule 31 and token UNION resolved as shift.
Conflict in state 150 between rule 31 and token SETIN resolved as shift.
Conflict in state 150 between rule 31 and token MOD resolved as shift.
Conflict in state 150 between rule 31 and token PLUS resolved as shift.
Conflict in state 150 between rule 31 and token MINUS resolved as shift.
Conflict in state 150 between rule 31 and token TIMES resolved as shift.
Conflict in state 150 between rule 31 and token DIVIDE resolved as shift.
Conflict in state 151 between rule 32 and token IMPLIES resolved as reduce.
Conflict in state 151 between rule 32 and token IFF resolved as reduce.
Conflict in state 151 between rule 32 and token OR resolved as reduce.
Conflict in state 151 between rule 32 and token AND resolved as reduce.
Conflict in state 151 between rule 32 and token EQUAL resolved as reduce.
Conflict in state 151 between rule 32 and token LT resolved as reduce.
Conflict in state 151 between rule 32 and token GT resolved as reduce.
Conflict in state 151 between rule 32 and token LE resolved as reduce.
Conflict in state 151 between rule 32 and token GE resolved as reduce.
Conflict in state 151 between rule 32 and token UNION resolved as shift.
Conflict in state 151 between rule 32 and token SETIN resolved as shift.
Conflict in state 151 between rule 32 and token MOD resolved as shift.
Conflict in state 151 between rule 32 and token PLUS resolved as shift.
Conflict in state 151 between rule 32 and token MINUS resolved as shift.
Conflict in state 151 between rule 32 and token TIMES resolved as shift.
Conflict in state 151 between rule 32 and token DIVIDE resolved as shift.
Conflict in state 152 between rule 33 and token IMPLIES resolved as reduce.
Conflict in state 152 between rule 33 and token IFF resolved as reduce.
Conflict in state 152 between rule 33 and token OR resolved as reduce.
Conflict in state 152 between rule 33 and token AND resolved as reduce.
Conflict in state 152 between rule 33 and token EQUAL resolved as reduce.
Conflict in state 152 between rule 33 and token LT resolved as reduce.
Conflict in state 152 between rule 33 and token GT resolved as reduce.
Conflict in state 152 between rule 33 and token LE resolved as reduce.
Conflict in state 152 between rule 33 and token GE resolved as reduce.
Conflict in state 152 between rule 33 and token UNION resolved as shift.
Conflict in state 152 between rule 33 and token SETIN resolved as shift.
Conflict in state 152 between rule 33 and token MOD resolved as shift.
Conflict in state 152 between rule 33 and token PLUS resolved as shift.
Conflict in state 152 between rule 33 and token MINUS resolved as shift.
Conflict in state 152 between rule 33 and token TIMES resolved as shift.
Conflict in state 152 between rule 33 and token DIVIDE resolved as shift.
Conflict in state 153 between rule 34 and token IMPLIES resolved as reduce.
Conflict in state 153 between rule 34 and token IFF resolved as reduce.
Conflict in state 153 between rule 34 and token OR resolved as reduce.
Conflict in state 153 between rule 34 and token AND resolved as reduce.
Conflict in state 153 between rule 34 and token EQUAL resolved as reduce.
Conflict in state 153 between rule 34 and token LT resolved as reduce.
Conflict in state 153 between rule 34 and token GT resolved as reduce.
Conflict in state 153 between rule 34 and token LE resolved as reduce.
Conflict in state 153 between rule 34 and token GE resolved as reduce.
Conflict in state 153 between rule 34 and token UNION resolved as shift.
Conflict in state 153 between rule 34 and token SETIN resolved as shift.
Conflict in state 153 between rule 34 and token MOD resolved as shift.
Conflict in state 153 between rule 34 and token PLUS resolved as shift.
Conflict in state 153 between rule 34 and token MINUS resolved as shift.
Conflict in state 153 between rule 34 and token TIMES resolved as shift.
Conflict in state 153 between rule 34 and token DIVIDE resolved as shift.
Conflict in state 154 between rule 36 and token IMPLIES resolved as reduce.
Conflict in state 154 between rule 36 and token IFF resolved as reduce.
Conflict in state 154 between rule 36 and token OR resolved as reduce.
Conflict in state 154 between rule 36 and token AND resolved as reduce.
Conflict in state 154 between rule 36 and token EQUAL resolved as reduce.
Conflict in state 154 between rule 36 and token LT resolved as reduce.
Conflict in state 154 between rule 36 and token GT resolved as reduce.
Conflict in state 154 between rule 36 and token LE resolved as reduce.
Conflict in state 154 between rule 36 and token GE resolved as reduce.
Conflict in state 154 between rule 36 and token UNION resolved as reduce.
Conflict in state 154 between rule 36 and token SETIN resolved as shift.
Conflict in state 154 between rule 36 and token MOD resolved as shift.
Conflict in state 154 between rule 36 and token PLUS resolved as shift.
Conflict in state 154 between rule 36 and token MINUS resolved as shift.
Conflict in state 154 between rule 36 and token TIMES resolved as shift.
Conflict in state 154 between rule 36 and token DIVIDE resolved as shift.
Conflict in state 155 between rule 37 and token IMPLIES resolved as reduce.
Conflict in state 155 between rule 37 and token IFF resolved as reduce.
Conflict in state 155 between rule 37 and token OR resolved as reduce.
Conflict in state 155 between rule 37 and token AND resolved as reduce.
Conflict in state 155 between rule 37 and token EQUAL resolved as reduce.
Conflict in state 155 between rule 37 and token LT resolved as reduce.
Conflict in state 155 between rule 37 and token GT resolved as reduce.
Conflict in state 155 between rule 37 and token LE resolved as reduce.
Conflict in state 155 between rule 37 and token GE resolved as reduce.
Conflict in state 155 between rule 37 and token UNION resolved as reduce.
Conflict in state 155 between rule 37 and token SETIN resolved as reduce.
Conflict in state 155 between rule 37 and token MOD resolved as shift.
Conflict in state 155 between rule 37 and token PLUS resolved as shift.
Conflict in state 155 between rule 37 and token MINUS resolved as shift.
Conflict in state 155 between rule 37 and token TIMES resolved as shift.
Conflict in state 155 between rule 37 and token DIVIDE resolved as shift.
Conflict in state 156 between rule 29 and token IMPLIES resolved as reduce.
Conflict in state 156 between rule 29 and token IFF resolved as reduce.
Conflict in state 156 between rule 29 and token OR resolved as reduce.
Conflict in state 156 between rule 29 and token AND resolved as reduce.
Conflict in state 156 between rule 29 and token EQUAL resolved as reduce.
Conflict in state 156 between rule 29 and token LT resolved as reduce.
Conflict in state 156 between rule 29 and token GT resolved as reduce.
Conflict in state 156 between rule 29 and token LE resolved as reduce.
Conflict in state 156 between rule 29 and token GE resolved as reduce.
Conflict in state 156 between rule 29 and token UNION resolved as reduce.
Conflict in state 156 between rule 29 and token SETIN resolved as reduce.
Conflict in state 156 between rule 29 and token MOD resolved as reduce.
Conflict in state 156 between rule 29 and token PLUS resolved as shift.
Conflict in state 156 between rule 29 and token MINUS resolved as shift.
Conflict in state 156 between rule 29 and token TIMES resolved as shift.
Conflict in state 156 between rule 29 and token DIVIDE resolved as shift.
Conflict in state 157 between rule 25 and token IMPLIES resolved as reduce.
Conflict in state 157 between rule 25 and token IFF resolved as reduce.
Conflict in state 157 between rule 25 and token OR resolved as reduce.
Conflict in state 157 between rule 25 and token AND resolved as reduce.
Conflict in state 157 between rule 25 and token EQUAL resolved as reduce.
Conflict in state 157 between rule 25 and token LT resolved as reduce.
Conflict in state 157 between rule 25 and token GT resolved as reduce.
Conflict in state 157 between rule 25 and token LE resolved as reduce.
Conflict in state 157 between rule 25 and token GE resolved as reduce.
Conflict in state 157 between rule 25 and token UNION resolved as reduce.
Conflict in state 157 between rule 25 and token SETIN resolved as reduce.
Conflict in state 157 between rule 25 and token MOD resolved as reduce.
Conflict in state 157 between rule 25 and token PLUS resolved as reduce.
Conflict in state 157 between rule 25 and token MINUS resolved as reduce.
Conflict in state 157 between rule 25 and token TIMES resolved as shift.
Conflict in state 157 between rule 25 and token DIVIDE resolved as shift.
Conflict in state 158 between rule 26 and token IMPLIES resolved as reduce.
Conflict in state 158 between rule 26 and token IFF resolved as reduce.
Conflict in state 158 between rule 26 and token OR resolved as reduce.
Conflict in state 158 between rule 26 and token AND resolved as reduce.
Conflict in state 158 between rule 26 and token EQUAL resolved as reduce.
Conflict in state 158 between rule 26 and token LT resolved as reduce.
Conflict in state 158 between rule 26 and token GT resolved as reduce.
Conflict in state 158 between rule 26 and token LE resolved as reduce.
Conflict in state 158 between rule 26 and token GE resolved as reduce.
Conflict in state 158 between rule 26 and token UNION resolved as reduce.
Conflict in state 158 between rule 26 and token SETIN resolved as reduce.
Conflict in state 158 between rule 26 and token MOD resolved as reduce.
Conflict in state 158 between rule 26 and token PLUS resolved as reduce.
Conflict in state 158 between rule 26 and token MINUS resolved as reduce.
Conflict in state 158 between rule 26 and token TIMES resolved as shift.
Conflict in state 158 between rule 26 and token DIVIDE resolved as shift.
Conflict in state 159 between rule 27 and token IMPLIES resolved as reduce.
Conflict in state 159 between rule 27 and token IFF resolved as reduce.
Conflict in state 159 between rule 27 and token OR resolved as reduce.
Conflict in state 159 between rule 27 and token AND resolved as reduce.
Conflict in state 159 between rule 27 and token EQUAL resolved as reduce.
Conflict in state 159 between rule 27 and token LT resolved as reduce.
Conflict in state 159 between rule 27 and token GT resolved as reduce.
Conflict in state 159 between rule 27 and token LE resolved as reduce.
Conflict in state 159 between rule 27 and token GE resolved as reduce.
Conflict in state 159 between rule 27 and token UNION resolved as reduce.
Conflict in state 159 between rule 27 and token SETIN resolved as reduce.
Conflict in state 159 between rule 27 and token MOD resolved as reduce.
Conflict in state 159 between rule 27 and token PLUS resolved as reduce.
Conflict in state 159 between rule 27 and token MINUS resolved as reduce.
Conflict in state 159 between rule 27 and token TIMES resolved as reduce.
Conflict in state 159 between rule 27 and token DIVIDE resolved as reduce.
Conflict in state 160 between rule 28 and token IMPLIES resolved as reduce.
Conflict in state 160 between rule 28 and token IFF resolved as reduce.
Conflict in state 160 between rule 28 and token OR resolved as reduce.
Conflict in state 160 between rule 28 and token AND resolved as reduce.
Conflict in state 160 between rule 28 and token EQUAL resolved as reduce.
Conflict in state 160 between rule 28 and token LT resolved as reduce.
Conflict in state 160 between rule 28 and token GT resolved as reduce.
Conflict in state 160 between rule 28 and token LE resolved as reduce.
Conflict in state 160 between rule 28 and token GE resolved as reduce.
Conflict in state 160 between rule 28 and token UNION resolved as reduce.
Conflict in state 160 between rule 28 and token SETIN resolved as reduce.
Conflict in state 160 between rule 28 and token MOD resolved as reduce.
Conflict in state 160 between rule 28 and token PLUS resolved as reduce.
Conflict in state 160 between rule 28 and token MINUS resolved as reduce.
Conflict in state 160 between rule 28 and token TIMES resolved as reduce.
Conflict in state 160 between rule 28 and token DIVIDE resolved as reduce.
Conflict in state 173 between rule 39 and token IMPLIES resolved as shift.
Conflict in state 173 between rule 39 and token IFF resolved as shift.
Conflict in state 173 between rule 39 and token OR resolved as shift.
Conflict in state 173 between rule 39 and token AND resolved as shift.
Conflict in state 173 between rule 39 and token EQUAL resolved as shift.
Conflict in state 173 between rule 39 and token LT resolved as shift.
Conflict in state 173 between rule 39 and token GT resolved as shift.
Conflict in state 173 between rule 39 and token LE resolved as shift.
Conflict in state 173 between rule 39 and token GE resolved as shift.
Conflict in state 173 between rule 39 and token UNION resolved as shift.
Conflict in state 173 between rule 39 and token SETIN resolved as shift.
Conflict in state 173 between rule 39 and token MOD resolved as shift.
Conflict in state 173 between rule 39 and token PLUS resolved as shift.
Conflict in state 173 between rule 39 and token MINUS resolved as shift.
Conflict in state 173 between rule 39 and token TIMES resolved as shift.
Conflict in state 173 between rule 39 and token DIVIDE resolved as shift.

Grammar
rule 1    constant -> ATOM
rule 2    constant -> number
rule 3    constant -> FALSEEXP
rule 4    constant -> TRUEEXP
rule 5    subrange -> number TWODOTS number
rule 6    number -> NUMBER
rule 7    number -> PLUS NUMBER
rule 8    number -> MINUS NUMBER
rule 9    spec -> SPEC ctl_expr
rule 10   var_id -> ATOM
rule 11   var_id -> SELF
rule 12   var_id -> var_id DOT ATOM
rule 13   var_id -> var_id LB simple_expr RB
rule 14   simple_expr -> var_id
rule 15   simple_expr -> number
rule 16   simple_expr -> subrange
rule 17   simple_expr -> FALSEEXP
rule 18   simple_expr -> TRUEEXP
rule 19   simple_expr -> LP simple_expr RP
rule 20   simple_expr -> simple_expr IMPLIES simple_expr
rule 21   simple_expr -> simple_expr IFF simple_expr
rule 22   simple_expr -> simple_expr OR simple_expr
rule 23   simple_expr -> simple_expr AND simple_expr
rule 24   simple_expr -> NOT simple_expr
rule 25   simple_expr -> simple_expr PLUS simple_expr
rule 26   simple_expr -> simple_expr MINUS simple_expr
rule 27   simple_expr -> simple_expr TIMES simple_expr
rule 28   simple_expr -> simple_expr DIVIDE simple_expr
rule 29   simple_expr -> simple_expr MOD simple_expr
rule 30   simple_expr -> simple_expr EQUAL simple_expr
rule 31   simple_expr -> simple_expr LT simple_expr
rule 32   simple_expr -> simple_expr GT simple_expr
rule 33   simple_expr -> simple_expr LE simple_expr
rule 34   simple_expr -> simple_expr GE simple_expr
rule 35   simple_expr -> LCB atom_set RCB
rule 36   simple_expr -> simple_expr UNION simple_expr
rule 37   simple_expr -> simple_expr SETIN simple_expr
rule 38   simple_expr -> CASE s_case_list ESAC
rule 39   simple_expr -> SIGMA LB ATOM EQUAL subrange RB simple_expr
rule 40   atom_set -> constant
rule 41   atom_set -> atom_set COMMA constant
rule 42   s_case_list ->		/* empty */
rule 43   s_case_list -> simple_expr COLON simple_expr SEMI s_case_list
rule 44   ctl_expr -> var_id
rule 45   ctl_expr -> number
rule 46   ctl_expr -> subrange
rule 47   ctl_expr -> FALSEEXP
rule 48   ctl_expr -> TRUEEXP
rule 49   ctl_expr -> LP ctl_expr RP
rule 50   ctl_expr -> ctl_expr IMPLIES ctl_expr
rule 51   ctl_expr -> ctl_expr IFF ctl_expr
rule 52   ctl_expr -> ctl_expr OR ctl_expr
rule 53   ctl_expr -> ctl_expr AND ctl_expr
rule 54   ctl_expr -> NOT ctl_expr
rule 55   ctl_expr -> ctl_expr PLUS ctl_expr
rule 56   ctl_expr -> ctl_expr MINUS ctl_expr
rule 57   ctl_expr -> ctl_expr TIMES ctl_expr
rule 58   ctl_expr -> ctl_expr DIVIDE ctl_expr
rule 59   ctl_expr -> ctl_expr MOD ctl_expr
rule 60   ctl_expr -> ctl_expr EQUAL ctl_expr
rule 61   ctl_expr -> ctl_expr LT ctl_expr
rule 62   ctl_expr -> ctl_expr GT ctl_expr
rule 63   ctl_expr -> ctl_expr LE ctl_expr
rule 64   ctl_expr -> ctl_expr GE ctl_expr
rule 65   ctl_expr -> LCB atom_set RCB
rule 66   ctl_expr -> ctl_expr UNION ctl_expr
rule 67   ctl_expr -> ctl_expr SETIN ctl_expr
rule 68   ctl_expr -> EX ctl_expr
rule 69   ctl_expr -> AX ctl_expr
rule 70   ctl_expr -> EF ctl_expr
rule 71   ctl_expr -> AF ctl_expr
rule 72   ctl_expr -> EG ctl_expr
rule 73   ctl_expr -> AG ctl_expr
rule 74   ctl_expr -> AA LB ctl_expr UNTIL ctl_expr RB
rule 75   ctl_expr -> EE LB ctl_expr UNTIL ctl_expr RB
rule 76   ctl_expr -> AA LB ctl_expr BUNTIL subrange ctl_expr RB
rule 77   ctl_expr -> EE LB ctl_expr BUNTIL subrange ctl_expr RB
rule 78   ctl_expr -> EBF subrange ctl_expr
rule 79   ctl_expr -> ABF subrange ctl_expr
rule 80   ctl_expr -> EBG subrange ctl_expr
rule 81   ctl_expr -> ABG subrange ctl_expr

Terminals, with rules where they appear

$ (-1)
error (256)
PROCESS (258)
EU (259)
AU (260)
EBU (261)
ABU (262)
MINU (263)
MAXU (264)
DEFINE (265)
SPEC (266) 9
COMPUTE (267)
INVARSPEC (268)
ASSIGN (269)
INPUT (270)
OUTPUT (271)
BOOLEAN (272)
ARRAY (273)
OF (274)
SCALAR (275)
SEMI (276) 43
LP (277) 19 49
RP (278) 19 49
LB (279) 13 39 74 75 76 77
RB (280) 13 39 74 75 76 77
LCB (281) 35 65
RCB (282) 35 65
LLCB (283)
RRCB (284)
EQDEF (285)
TWODOTS (286) 5
FALSEEXP (287) 3 17 47
TRUEEXP (288) 4 18 48
SELF (289) 11
SIGMA (290) 39
CASE (291) 38
ESAC (292) 38
COLON (293) 43
ATOM (294) 1 10 12 39
NUMBER (295) 6 7 8
QUOTE (296)
COMMA (297) 41
IMPLIES (298) 20 50
IFF (299) 21 51
OR (300) 22 52
AND (301) 23 53
NOT (302) 24 54
EX (303) 68
AX (304) 69
EF (305) 70
AF (306) 71
EG (307) 72
AG (308) 73
EE (309) 75 77
AA (310) 74 76
UNTIL (311) 74 75
EBF (312) 78
EBG (313) 80
ABF (314) 79
ABG (315) 81
BUNTIL (316) 76 77
MMIN (317)
MMAX (318)
EQUAL (319) 30 39 60
LT (320) 31 61
GT (321) 32 62
LE (322) 33 63
GE (323) 34 64
UNION (324) 36 66
SETIN (325) 37 67
MOD (326) 29 59
PLUS (327) 7 25 55
MINUS (328) 8 26 56
TIMES (329) 27 57
DIVIDE (330) 28 58
UMINUS (331)
NEXT (332)
DOT (333) 12

Nonterminals, with rules where they appear

constant (79)
    on left: 1 2 3 4, on right: 40 41
subrange (80)
    on left: 5, on right: 16 39 46 76 77 78 79 80 81
number (81)
    on left: 6 7 8, on right: 2 5 15 45
spec (82)
    on left: 9
var_id (83)
    on left: 10 11 12 13, on right: 12 13 14 44
simple_expr (84)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
    32 33 34 35 36 37 38 39, on right: 13 19 20 21 22 23 24 25 26 27
    28 29 30 31 32 33 34 36 37 39 43
atom_set (85)
    on left: 40 41, on right: 35 41 65
s_case_list (86)
    on left: 42 43, on right: 38 43
ctl_expr (87)
    on left: 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
    62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81,
    on right: 9 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 66
    67 68 69 70 71 72 73 74 75 76 77 78 79 80 81


state 0

    SPEC	shift, and go to state 1

    spec	go to state 174



state 1

    spec  ->  SPEC . ctl_expr   (rule 9)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 27



state 2

    ctl_expr  ->  LP . ctl_expr RP   (rule 49)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 28



state 3

    ctl_expr  ->  LCB . atom_set RCB   (rule 65)

    FALSEEXP	shift, and go to state 29
    TRUEEXP	shift, and go to state 30
    ATOM	shift, and go to state 31
    NUMBER	shift, and go to state 8
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    constant	go to state 32
    number	go to state 33
    atom_set	go to state 34



state 4

    ctl_expr  ->  FALSEEXP .   (rule 47)

    $default	reduce using rule 47 (ctl_expr)



state 5

    ctl_expr  ->  TRUEEXP .   (rule 48)

    $default	reduce using rule 48 (ctl_expr)



state 6

    var_id  ->  SELF .   (rule 11)

    $default	reduce using rule 11 (var_id)



state 7

    var_id  ->  ATOM .   (rule 10)

    $default	reduce using rule 10 (var_id)



state 8

    number  ->  NUMBER .   (rule 6)

    $default	reduce using rule 6 (number)



state 9

    ctl_expr  ->  NOT . ctl_expr   (rule 54)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 35



state 10

    ctl_expr  ->  EX . ctl_expr   (rule 68)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 36



state 11

    ctl_expr  ->  AX . ctl_expr   (rule 69)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 37



state 12

    ctl_expr  ->  EF . ctl_expr   (rule 70)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 38



state 13

    ctl_expr  ->  AF . ctl_expr   (rule 71)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 39



state 14

    ctl_expr  ->  EG . ctl_expr   (rule 72)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 40



state 15

    ctl_expr  ->  AG . ctl_expr   (rule 73)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 41



state 16

    ctl_expr  ->  EE . LB ctl_expr UNTIL ctl_expr RB   (rule 75)
    ctl_expr  ->  EE . LB ctl_expr BUNTIL subrange ctl_expr RB   (rule 77)

    LB  	shift, and go to state 42



state 17

    ctl_expr  ->  AA . LB ctl_expr UNTIL ctl_expr RB   (rule 74)
    ctl_expr  ->  AA . LB ctl_expr BUNTIL subrange ctl_expr RB   (rule 76)

    LB  	shift, and go to state 43



state 18

    ctl_expr  ->  EBF . subrange ctl_expr   (rule 78)

    NUMBER	shift, and go to state 8
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 44
    number	go to state 45



state 19

    ctl_expr  ->  EBG . subrange ctl_expr   (rule 80)

    NUMBER	shift, and go to state 8
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 46
    number	go to state 45



state 20

    ctl_expr  ->  ABF . subrange ctl_expr   (rule 79)

    NUMBER	shift, and go to state 8
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 47
    number	go to state 45



state 21

    ctl_expr  ->  ABG . subrange ctl_expr   (rule 81)

    NUMBER	shift, and go to state 8
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 48
    number	go to state 45



state 22

    number  ->  PLUS . NUMBER   (rule 7)

    NUMBER	shift, and go to state 49



state 23

    number  ->  MINUS . NUMBER   (rule 8)

    NUMBER	shift, and go to state 50



state 24

    ctl_expr  ->  subrange .   (rule 46)

    $default	reduce using rule 46 (ctl_expr)



state 25

    subrange  ->  number . TWODOTS number   (rule 5)
    ctl_expr  ->  number .   (rule 45)

    TWODOTS	shift, and go to state 51

    $default	reduce using rule 45 (ctl_expr)



state 26

    var_id  ->  var_id . DOT ATOM   (rule 12)
    var_id  ->  var_id . LB simple_expr RB   (rule 13)
    ctl_expr  ->  var_id .   (rule 44)

    LB  	shift, and go to state 52
    DOT 	shift, and go to state 53

    $default	reduce using rule 44 (ctl_expr)



state 27

    spec  ->  SPEC ctl_expr .   (rule 9)
    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)

    IMPLIES	shift, and go to state 54
    IFF 	shift, and go to state 55
    OR  	shift, and go to state 56
    AND 	shift, and go to state 57
    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 9 (spec)



state 28

    ctl_expr  ->  LP ctl_expr . RP   (rule 49)
    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)

    RP  	shift, and go to state 70
    IMPLIES	shift, and go to state 54
    IFF 	shift, and go to state 55
    OR  	shift, and go to state 56
    AND 	shift, and go to state 57
    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69



state 29

    constant  ->  FALSEEXP .   (rule 3)

    $default	reduce using rule 3 (constant)



state 30

    constant  ->  TRUEEXP .   (rule 4)

    $default	reduce using rule 4 (constant)



state 31

    constant  ->  ATOM .   (rule 1)

    $default	reduce using rule 1 (constant)



state 32

    atom_set  ->  constant .   (rule 40)

    $default	reduce using rule 40 (atom_set)



state 33

    constant  ->  number .   (rule 2)

    $default	reduce using rule 2 (constant)



state 34

    atom_set  ->  atom_set . COMMA constant   (rule 41)
    ctl_expr  ->  LCB atom_set . RCB   (rule 65)

    RCB 	shift, and go to state 71
    COMMA	shift, and go to state 72



state 35

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  NOT ctl_expr .   (rule 54)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)

    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 54 (ctl_expr)



state 36

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)
    ctl_expr  ->  EX ctl_expr .   (rule 68)

    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 68 (ctl_expr)



state 37

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)
    ctl_expr  ->  AX ctl_expr .   (rule 69)

    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 69 (ctl_expr)



state 38

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)
    ctl_expr  ->  EF ctl_expr .   (rule 70)

    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 70 (ctl_expr)



state 39

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)
    ctl_expr  ->  AF ctl_expr .   (rule 71)

    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 71 (ctl_expr)



state 40

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)
    ctl_expr  ->  EG ctl_expr .   (rule 72)

    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 72 (ctl_expr)



state 41

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)
    ctl_expr  ->  AG ctl_expr .   (rule 73)

    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 73 (ctl_expr)



state 42

    ctl_expr  ->  EE LB . ctl_expr UNTIL ctl_expr RB   (rule 75)
    ctl_expr  ->  EE LB . ctl_expr BUNTIL subrange ctl_expr RB   (rule 77)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 73



state 43

    ctl_expr  ->  AA LB . ctl_expr UNTIL ctl_expr RB   (rule 74)
    ctl_expr  ->  AA LB . ctl_expr BUNTIL subrange ctl_expr RB   (rule 76)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 74



state 44

    ctl_expr  ->  EBF subrange . ctl_expr   (rule 78)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 75



state 45

    subrange  ->  number . TWODOTS number   (rule 5)

    TWODOTS	shift, and go to state 51



state 46

    ctl_expr  ->  EBG subrange . ctl_expr   (rule 80)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 76



state 47

    ctl_expr  ->  ABF subrange . ctl_expr   (rule 79)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 77



state 48

    ctl_expr  ->  ABG subrange . ctl_expr   (rule 81)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 78



state 49

    number  ->  PLUS NUMBER .   (rule 7)

    $default	reduce using rule 7 (number)



state 50

    number  ->  MINUS NUMBER .   (rule 8)

    $default	reduce using rule 8 (number)



state 51

    subrange  ->  number TWODOTS . number   (rule 5)

    NUMBER	shift, and go to state 8
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    number	go to state 79



state 52

    var_id  ->  var_id LB . simple_expr RB   (rule 13)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 90



state 53

    var_id  ->  var_id DOT . ATOM   (rule 12)

    ATOM	shift, and go to state 91



state 54

    ctl_expr  ->  ctl_expr IMPLIES . ctl_expr   (rule 50)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 92



state 55

    ctl_expr  ->  ctl_expr IFF . ctl_expr   (rule 51)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 93



state 56

    ctl_expr  ->  ctl_expr OR . ctl_expr   (rule 52)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 94



state 57

    ctl_expr  ->  ctl_expr AND . ctl_expr   (rule 53)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 95



state 58

    ctl_expr  ->  ctl_expr EQUAL . ctl_expr   (rule 60)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 96



state 59

    ctl_expr  ->  ctl_expr LT . ctl_expr   (rule 61)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 97



state 60

    ctl_expr  ->  ctl_expr GT . ctl_expr   (rule 62)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 98



state 61

    ctl_expr  ->  ctl_expr LE . ctl_expr   (rule 63)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 99



state 62

    ctl_expr  ->  ctl_expr GE . ctl_expr   (rule 64)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 100



state 63

    ctl_expr  ->  ctl_expr UNION . ctl_expr   (rule 66)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 101



state 64

    ctl_expr  ->  ctl_expr SETIN . ctl_expr   (rule 67)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 102



state 65

    ctl_expr  ->  ctl_expr MOD . ctl_expr   (rule 59)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 103



state 66

    ctl_expr  ->  ctl_expr PLUS . ctl_expr   (rule 55)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 104



state 67

    ctl_expr  ->  ctl_expr MINUS . ctl_expr   (rule 56)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 105



state 68

    ctl_expr  ->  ctl_expr TIMES . ctl_expr   (rule 57)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 106



state 69

    ctl_expr  ->  ctl_expr DIVIDE . ctl_expr   (rule 58)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 107



state 70

    ctl_expr  ->  LP ctl_expr RP .   (rule 49)

    $default	reduce using rule 49 (ctl_expr)



state 71

    ctl_expr  ->  LCB atom_set RCB .   (rule 65)

    $default	reduce using rule 65 (ctl_expr)



state 72

    atom_set  ->  atom_set COMMA . constant   (rule 41)

    FALSEEXP	shift, and go to state 29
    TRUEEXP	shift, and go to state 30
    ATOM	shift, and go to state 31
    NUMBER	shift, and go to state 8
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    constant	go to state 108
    number	go to state 33



state 73

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)
    ctl_expr  ->  EE LB ctl_expr . UNTIL ctl_expr RB   (rule 75)
    ctl_expr  ->  EE LB ctl_expr . BUNTIL subrange ctl_expr RB   (rule 77)

    IMPLIES	shift, and go to state 54
    IFF 	shift, and go to state 55
    OR  	shift, and go to state 56
    AND 	shift, and go to state 57
    UNTIL	shift, and go to state 109
    BUNTIL	shift, and go to state 110
    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69



state 74

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)
    ctl_expr  ->  AA LB ctl_expr . UNTIL ctl_expr RB   (rule 74)
    ctl_expr  ->  AA LB ctl_expr . BUNTIL subrange ctl_expr RB   (rule 76)

    IMPLIES	shift, and go to state 54
    IFF 	shift, and go to state 55
    OR  	shift, and go to state 56
    AND 	shift, and go to state 57
    UNTIL	shift, and go to state 111
    BUNTIL	shift, and go to state 112
    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69



state 75

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)
    ctl_expr  ->  EBF subrange ctl_expr .   (rule 78)

    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 78 (ctl_expr)



state 76

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)
    ctl_expr  ->  EBG subrange ctl_expr .   (rule 80)

    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 80 (ctl_expr)



state 77

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)
    ctl_expr  ->  ABF subrange ctl_expr .   (rule 79)

    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 79 (ctl_expr)



state 78

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)
    ctl_expr  ->  ABG subrange ctl_expr .   (rule 81)

    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 81 (ctl_expr)



state 79

    subrange  ->  number TWODOTS number .   (rule 5)

    $default	reduce using rule 5 (subrange)



state 80

    simple_expr  ->  LP . simple_expr RP   (rule 19)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 113



state 81

    simple_expr  ->  LCB . atom_set RCB   (rule 35)

    FALSEEXP	shift, and go to state 29
    TRUEEXP	shift, and go to state 30
    ATOM	shift, and go to state 31
    NUMBER	shift, and go to state 8
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    constant	go to state 32
    number	go to state 33
    atom_set	go to state 114



state 82

    simple_expr  ->  FALSEEXP .   (rule 17)

    $default	reduce using rule 17 (simple_expr)



state 83

    simple_expr  ->  TRUEEXP .   (rule 18)

    $default	reduce using rule 18 (simple_expr)



state 84

    simple_expr  ->  SIGMA . LB ATOM EQUAL subrange RB simple_expr   (rule 39)

    LB  	shift, and go to state 115



state 85

    simple_expr  ->  CASE . s_case_list ESAC   (rule 38)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    $default	reduce using rule 42 (s_case_list)

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 116
    s_case_list	go to state 117



state 86

    simple_expr  ->  NOT . simple_expr   (rule 24)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 118



state 87

    simple_expr  ->  subrange .   (rule 16)

    $default	reduce using rule 16 (simple_expr)



state 88

    subrange  ->  number . TWODOTS number   (rule 5)
    simple_expr  ->  number .   (rule 15)

    TWODOTS	shift, and go to state 51

    $default	reduce using rule 15 (simple_expr)



state 89

    var_id  ->  var_id . DOT ATOM   (rule 12)
    var_id  ->  var_id . LB simple_expr RB   (rule 13)
    simple_expr  ->  var_id .   (rule 14)

    LB  	shift, and go to state 52
    DOT 	shift, and go to state 53

    $default	reduce using rule 14 (simple_expr)



state 90

    var_id  ->  var_id LB simple_expr . RB   (rule 13)
    simple_expr  ->  simple_expr . IMPLIES simple_expr   (rule 20)
    simple_expr  ->  simple_expr . IFF simple_expr   (rule 21)
    simple_expr  ->  simple_expr . OR simple_expr   (rule 22)
    simple_expr  ->  simple_expr . AND simple_expr   (rule 23)
    simple_expr  ->  simple_expr . PLUS simple_expr   (rule 25)
    simple_expr  ->  simple_expr . MINUS simple_expr   (rule 26)
    simple_expr  ->  simple_expr . TIMES simple_expr   (rule 27)
    simple_expr  ->  simple_expr . DIVIDE simple_expr   (rule 28)
    simple_expr  ->  simple_expr . MOD simple_expr   (rule 29)
    simple_expr  ->  simple_expr . EQUAL simple_expr   (rule 30)
    simple_expr  ->  simple_expr . LT simple_expr   (rule 31)
    simple_expr  ->  simple_expr . GT simple_expr   (rule 32)
    simple_expr  ->  simple_expr . LE simple_expr   (rule 33)
    simple_expr  ->  simple_expr . GE simple_expr   (rule 34)
    simple_expr  ->  simple_expr . UNION simple_expr   (rule 36)
    simple_expr  ->  simple_expr . SETIN simple_expr   (rule 37)

    RB  	shift, and go to state 119
    IMPLIES	shift, and go to state 120
    IFF 	shift, and go to state 121
    OR  	shift, and go to state 122
    AND 	shift, and go to state 123
    EQUAL	shift, and go to state 124
    LT  	shift, and go to state 125
    GT  	shift, and go to state 126
    LE  	shift, and go to state 127
    GE  	shift, and go to state 128
    UNION	shift, and go to state 129
    SETIN	shift, and go to state 130
    MOD 	shift, and go to state 131
    PLUS	shift, and go to state 132
    MINUS	shift, and go to state 133
    TIMES	shift, and go to state 134
    DIVIDE	shift, and go to state 135



state 91

    var_id  ->  var_id DOT ATOM .   (rule 12)

    $default	reduce using rule 12 (var_id)



state 92

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr IMPLIES ctl_expr .   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)

    IMPLIES	shift, and go to state 54
    IFF 	shift, and go to state 55
    OR  	shift, and go to state 56
    AND 	shift, and go to state 57
    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 50 (ctl_expr)



state 93

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr IFF ctl_expr .   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)

    OR  	shift, and go to state 56
    AND 	shift, and go to state 57
    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 51 (ctl_expr)



state 94

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr OR ctl_expr .   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)

    AND 	shift, and go to state 57
    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 52 (ctl_expr)



state 95

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr AND ctl_expr .   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)

    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 53 (ctl_expr)



state 96

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr EQUAL ctl_expr .   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)

    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 60 (ctl_expr)



state 97

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr LT ctl_expr .   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)

    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 61 (ctl_expr)



state 98

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr GT ctl_expr .   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)

    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 62 (ctl_expr)



state 99

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr LE ctl_expr .   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)

    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 63 (ctl_expr)



state 100

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr GE ctl_expr .   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)

    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 64 (ctl_expr)



state 101

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr UNION ctl_expr .   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)

    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 66 (ctl_expr)



state 102

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)
    ctl_expr  ->  ctl_expr SETIN ctl_expr .   (rule 67)

    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 67 (ctl_expr)



state 103

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr MOD ctl_expr .   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)

    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 59 (ctl_expr)



state 104

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr PLUS ctl_expr .   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)

    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 55 (ctl_expr)



state 105

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr MINUS ctl_expr .   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)

    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69

    $default	reduce using rule 56 (ctl_expr)



state 106

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr TIMES ctl_expr .   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)


    $default	reduce using rule 57 (ctl_expr)



state 107

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr DIVIDE ctl_expr .   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)


    $default	reduce using rule 58 (ctl_expr)



state 108

    atom_set  ->  atom_set COMMA constant .   (rule 41)

    $default	reduce using rule 41 (atom_set)



state 109

    ctl_expr  ->  EE LB ctl_expr UNTIL . ctl_expr RB   (rule 75)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 136



state 110

    ctl_expr  ->  EE LB ctl_expr BUNTIL . subrange ctl_expr RB   (rule 77)

    NUMBER	shift, and go to state 8
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 137
    number	go to state 45



state 111

    ctl_expr  ->  AA LB ctl_expr UNTIL . ctl_expr RB   (rule 74)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 138



state 112

    ctl_expr  ->  AA LB ctl_expr BUNTIL . subrange ctl_expr RB   (rule 76)

    NUMBER	shift, and go to state 8
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 139
    number	go to state 45



state 113

    simple_expr  ->  LP simple_expr . RP   (rule 19)
    simple_expr  ->  simple_expr . IMPLIES simple_expr   (rule 20)
    simple_expr  ->  simple_expr . IFF simple_expr   (rule 21)
    simple_expr  ->  simple_expr . OR simple_expr   (rule 22)
    simple_expr  ->  simple_expr . AND simple_expr   (rule 23)
    simple_expr  ->  simple_expr . PLUS simple_expr   (rule 25)
    simple_expr  ->  simple_expr . MINUS simple_expr   (rule 26)
    simple_expr  ->  simple_expr . TIMES simple_expr   (rule 27)
    simple_expr  ->  simple_expr . DIVIDE simple_expr   (rule 28)
    simple_expr  ->  simple_expr . MOD simple_expr   (rule 29)
    simple_expr  ->  simple_expr . EQUAL simple_expr   (rule 30)
    simple_expr  ->  simple_expr . LT simple_expr   (rule 31)
    simple_expr  ->  simple_expr . GT simple_expr   (rule 32)
    simple_expr  ->  simple_expr . LE simple_expr   (rule 33)
    simple_expr  ->  simple_expr . GE simple_expr   (rule 34)
    simple_expr  ->  simple_expr . UNION simple_expr   (rule 36)
    simple_expr  ->  simple_expr . SETIN simple_expr   (rule 37)

    RP  	shift, and go to state 140
    IMPLIES	shift, and go to state 120
    IFF 	shift, and go to state 121
    OR  	shift, and go to state 122
    AND 	shift, and go to state 123
    EQUAL	shift, and go to state 124
    LT  	shift, and go to state 125
    GT  	shift, and go to state 126
    LE  	shift, and go to state 127
    GE  	shift, and go to state 128
    UNION	shift, and go to state 129
    SETIN	shift, and go to state 130
    MOD 	shift, and go to state 131
    PLUS	shift, and go to state 132
    MINUS	shift, and go to state 133
    TIMES	shift, and go to state 134
    DIVIDE	shift, and go to state 135



state 114

    simple_expr  ->  LCB atom_set . RCB   (rule 35)
    atom_set  ->  atom_set . COMMA constant   (rule 41)

    RCB 	shift, and go to state 141
    COMMA	shift, and go to state 72



state 115

    simple_expr  ->  SIGMA LB . ATOM EQUAL subrange RB simple_expr   (rule 39)

    ATOM	shift, and go to state 142



state 116

    simple_expr  ->  simple_expr . IMPLIES simple_expr   (rule 20)
    simple_expr  ->  simple_expr . IFF simple_expr   (rule 21)
    simple_expr  ->  simple_expr . OR simple_expr   (rule 22)
    simple_expr  ->  simple_expr . AND simple_expr   (rule 23)
    simple_expr  ->  simple_expr . PLUS simple_expr   (rule 25)
    simple_expr  ->  simple_expr . MINUS simple_expr   (rule 26)
    simple_expr  ->  simple_expr . TIMES simple_expr   (rule 27)
    simple_expr  ->  simple_expr . DIVIDE simple_expr   (rule 28)
    simple_expr  ->  simple_expr . MOD simple_expr   (rule 29)
    simple_expr  ->  simple_expr . EQUAL simple_expr   (rule 30)
    simple_expr  ->  simple_expr . LT simple_expr   (rule 31)
    simple_expr  ->  simple_expr . GT simple_expr   (rule 32)
    simple_expr  ->  simple_expr . LE simple_expr   (rule 33)
    simple_expr  ->  simple_expr . GE simple_expr   (rule 34)
    simple_expr  ->  simple_expr . UNION simple_expr   (rule 36)
    simple_expr  ->  simple_expr . SETIN simple_expr   (rule 37)
    s_case_list  ->  simple_expr . COLON simple_expr SEMI s_case_list   (rule 43)

    COLON	shift, and go to state 143
    IMPLIES	shift, and go to state 120
    IFF 	shift, and go to state 121
    OR  	shift, and go to state 122
    AND 	shift, and go to state 123
    EQUAL	shift, and go to state 124
    LT  	shift, and go to state 125
    GT  	shift, and go to state 126
    LE  	shift, and go to state 127
    GE  	shift, and go to state 128
    UNION	shift, and go to state 129
    SETIN	shift, and go to state 130
    MOD 	shift, and go to state 131
    PLUS	shift, and go to state 132
    MINUS	shift, and go to state 133
    TIMES	shift, and go to state 134
    DIVIDE	shift, and go to state 135



state 117

    simple_expr  ->  CASE s_case_list . ESAC   (rule 38)

    ESAC	shift, and go to state 144



state 118

    simple_expr  ->  simple_expr . IMPLIES simple_expr   (rule 20)
    simple_expr  ->  simple_expr . IFF simple_expr   (rule 21)
    simple_expr  ->  simple_expr . OR simple_expr   (rule 22)
    simple_expr  ->  simple_expr . AND simple_expr   (rule 23)
    simple_expr  ->  NOT simple_expr .   (rule 24)
    simple_expr  ->  simple_expr . PLUS simple_expr   (rule 25)
    simple_expr  ->  simple_expr . MINUS simple_expr   (rule 26)
    simple_expr  ->  simple_expr . TIMES simple_expr   (rule 27)
    simple_expr  ->  simple_expr . DIVIDE simple_expr   (rule 28)
    simple_expr  ->  simple_expr . MOD simple_expr   (rule 29)
    simple_expr  ->  simple_expr . EQUAL simple_expr   (rule 30)
    simple_expr  ->  simple_expr . LT simple_expr   (rule 31)
    simple_expr  ->  simple_expr . GT simple_expr   (rule 32)
    simple_expr  ->  simple_expr . LE simple_expr   (rule 33)
    simple_expr  ->  simple_expr . GE simple_expr   (rule 34)
    simple_expr  ->  simple_expr . UNION simple_expr   (rule 36)
    simple_expr  ->  simple_expr . SETIN simple_expr   (rule 37)

    EQUAL	shift, and go to state 124
    LT  	shift, and go to state 125
    GT  	shift, and go to state 126
    LE  	shift, and go to state 127
    GE  	shift, and go to state 128
    UNION	shift, and go to state 129
    SETIN	shift, and go to state 130
    MOD 	shift, and go to state 131
    PLUS	shift, and go to state 132
    MINUS	shift, and go to state 133
    TIMES	shift, and go to state 134
    DIVIDE	shift, and go to state 135

    $default	reduce using rule 24 (simple_expr)



state 119

    var_id  ->  var_id LB simple_expr RB .   (rule 13)

    $default	reduce using rule 13 (var_id)



state 120

    simple_expr  ->  simple_expr IMPLIES . simple_expr   (rule 20)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 145



state 121

    simple_expr  ->  simple_expr IFF . simple_expr   (rule 21)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 146



state 122

    simple_expr  ->  simple_expr OR . simple_expr   (rule 22)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 147



state 123

    simple_expr  ->  simple_expr AND . simple_expr   (rule 23)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 148



state 124

    simple_expr  ->  simple_expr EQUAL . simple_expr   (rule 30)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 149



state 125

    simple_expr  ->  simple_expr LT . simple_expr   (rule 31)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 150



state 126

    simple_expr  ->  simple_expr GT . simple_expr   (rule 32)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 151



state 127

    simple_expr  ->  simple_expr LE . simple_expr   (rule 33)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 152



state 128

    simple_expr  ->  simple_expr GE . simple_expr   (rule 34)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 153



state 129

    simple_expr  ->  simple_expr UNION . simple_expr   (rule 36)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 154



state 130

    simple_expr  ->  simple_expr SETIN . simple_expr   (rule 37)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 155



state 131

    simple_expr  ->  simple_expr MOD . simple_expr   (rule 29)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 156



state 132

    simple_expr  ->  simple_expr PLUS . simple_expr   (rule 25)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 157



state 133

    simple_expr  ->  simple_expr MINUS . simple_expr   (rule 26)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 158



state 134

    simple_expr  ->  simple_expr TIMES . simple_expr   (rule 27)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 159



state 135

    simple_expr  ->  simple_expr DIVIDE . simple_expr   (rule 28)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 160



state 136

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)
    ctl_expr  ->  EE LB ctl_expr UNTIL ctl_expr . RB   (rule 75)

    RB  	shift, and go to state 161
    IMPLIES	shift, and go to state 54
    IFF 	shift, and go to state 55
    OR  	shift, and go to state 56
    AND 	shift, and go to state 57
    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69



state 137

    ctl_expr  ->  EE LB ctl_expr BUNTIL subrange . ctl_expr RB   (rule 77)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 162



state 138

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)
    ctl_expr  ->  AA LB ctl_expr UNTIL ctl_expr . RB   (rule 74)

    RB  	shift, and go to state 163
    IMPLIES	shift, and go to state 54
    IFF 	shift, and go to state 55
    OR  	shift, and go to state 56
    AND 	shift, and go to state 57
    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69



state 139

    ctl_expr  ->  AA LB ctl_expr BUNTIL subrange . ctl_expr RB   (rule 76)

    LP  	shift, and go to state 2
    LCB 	shift, and go to state 3
    FALSEEXP	shift, and go to state 4
    TRUEEXP	shift, and go to state 5
    SELF	shift, and go to state 6
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 9
    EX  	shift, and go to state 10
    AX  	shift, and go to state 11
    EF  	shift, and go to state 12
    AF  	shift, and go to state 13
    EG  	shift, and go to state 14
    AG  	shift, and go to state 15
    EE  	shift, and go to state 16
    AA  	shift, and go to state 17
    EBF 	shift, and go to state 18
    EBG 	shift, and go to state 19
    ABF 	shift, and go to state 20
    ABG 	shift, and go to state 21
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 24
    number	go to state 25
    var_id	go to state 26
    ctl_expr	go to state 164



state 140

    simple_expr  ->  LP simple_expr RP .   (rule 19)

    $default	reduce using rule 19 (simple_expr)



state 141

    simple_expr  ->  LCB atom_set RCB .   (rule 35)

    $default	reduce using rule 35 (simple_expr)



state 142

    simple_expr  ->  SIGMA LB ATOM . EQUAL subrange RB simple_expr   (rule 39)

    EQUAL	shift, and go to state 165



state 143

    s_case_list  ->  simple_expr COLON . simple_expr SEMI s_case_list   (rule 43)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 166



state 144

    simple_expr  ->  CASE s_case_list ESAC .   (rule 38)

    $default	reduce using rule 38 (simple_expr)



state 145

    simple_expr  ->  simple_expr . IMPLIES simple_expr   (rule 20)
    simple_expr  ->  simple_expr IMPLIES simple_expr .   (rule 20)
    simple_expr  ->  simple_expr . IFF simple_expr   (rule 21)
    simple_expr  ->  simple_expr . OR simple_expr   (rule 22)
    simple_expr  ->  simple_expr . AND simple_expr   (rule 23)
    simple_expr  ->  simple_expr . PLUS simple_expr   (rule 25)
    simple_expr  ->  simple_expr . MINUS simple_expr   (rule 26)
    simple_expr  ->  simple_expr . TIMES simple_expr   (rule 27)
    simple_expr  ->  simple_expr . DIVIDE simple_expr   (rule 28)
    simple_expr  ->  simple_expr . MOD simple_expr   (rule 29)
    simple_expr  ->  simple_expr . EQUAL simple_expr   (rule 30)
    simple_expr  ->  simple_expr . LT simple_expr   (rule 31)
    simple_expr  ->  simple_expr . GT simple_expr   (rule 32)
    simple_expr  ->  simple_expr . LE simple_expr   (rule 33)
    simple_expr  ->  simple_expr . GE simple_expr   (rule 34)
    simple_expr  ->  simple_expr . UNION simple_expr   (rule 36)
    simple_expr  ->  simple_expr . SETIN simple_expr   (rule 37)

    IMPLIES	shift, and go to state 120
    IFF 	shift, and go to state 121
    OR  	shift, and go to state 122
    AND 	shift, and go to state 123
    EQUAL	shift, and go to state 124
    LT  	shift, and go to state 125
    GT  	shift, and go to state 126
    LE  	shift, and go to state 127
    GE  	shift, and go to state 128
    UNION	shift, and go to state 129
    SETIN	shift, and go to state 130
    MOD 	shift, and go to state 131
    PLUS	shift, and go to state 132
    MINUS	shift, and go to state 133
    TIMES	shift, and go to state 134
    DIVIDE	shift, and go to state 135

    $default	reduce using rule 20 (simple_expr)



state 146

    simple_expr  ->  simple_expr . IMPLIES simple_expr   (rule 20)
    simple_expr  ->  simple_expr . IFF simple_expr   (rule 21)
    simple_expr  ->  simple_expr IFF simple_expr .   (rule 21)
    simple_expr  ->  simple_expr . OR simple_expr   (rule 22)
    simple_expr  ->  simple_expr . AND simple_expr   (rule 23)
    simple_expr  ->  simple_expr . PLUS simple_expr   (rule 25)
    simple_expr  ->  simple_expr . MINUS simple_expr   (rule 26)
    simple_expr  ->  simple_expr . TIMES simple_expr   (rule 27)
    simple_expr  ->  simple_expr . DIVIDE simple_expr   (rule 28)
    simple_expr  ->  simple_expr . MOD simple_expr   (rule 29)
    simple_expr  ->  simple_expr . EQUAL simple_expr   (rule 30)
    simple_expr  ->  simple_expr . LT simple_expr   (rule 31)
    simple_expr  ->  simple_expr . GT simple_expr   (rule 32)
    simple_expr  ->  simple_expr . LE simple_expr   (rule 33)
    simple_expr  ->  simple_expr . GE simple_expr   (rule 34)
    simple_expr  ->  simple_expr . UNION simple_expr   (rule 36)
    simple_expr  ->  simple_expr . SETIN simple_expr   (rule 37)

    OR  	shift, and go to state 122
    AND 	shift, and go to state 123
    EQUAL	shift, and go to state 124
    LT  	shift, and go to state 125
    GT  	shift, and go to state 126
    LE  	shift, and go to state 127
    GE  	shift, and go to state 128
    UNION	shift, and go to state 129
    SETIN	shift, and go to state 130
    MOD 	shift, and go to state 131
    PLUS	shift, and go to state 132
    MINUS	shift, and go to state 133
    TIMES	shift, and go to state 134
    DIVIDE	shift, and go to state 135

    $default	reduce using rule 21 (simple_expr)



state 147

    simple_expr  ->  simple_expr . IMPLIES simple_expr   (rule 20)
    simple_expr  ->  simple_expr . IFF simple_expr   (rule 21)
    simple_expr  ->  simple_expr . OR simple_expr   (rule 22)
    simple_expr  ->  simple_expr OR simple_expr .   (rule 22)
    simple_expr  ->  simple_expr . AND simple_expr   (rule 23)
    simple_expr  ->  simple_expr . PLUS simple_expr   (rule 25)
    simple_expr  ->  simple_expr . MINUS simple_expr   (rule 26)
    simple_expr  ->  simple_expr . TIMES simple_expr   (rule 27)
    simple_expr  ->  simple_expr . DIVIDE simple_expr   (rule 28)
    simple_expr  ->  simple_expr . MOD simple_expr   (rule 29)
    simple_expr  ->  simple_expr . EQUAL simple_expr   (rule 30)
    simple_expr  ->  simple_expr . LT simple_expr   (rule 31)
    simple_expr  ->  simple_expr . GT simple_expr   (rule 32)
    simple_expr  ->  simple_expr . LE simple_expr   (rule 33)
    simple_expr  ->  simple_expr . GE simple_expr   (rule 34)
    simple_expr  ->  simple_expr . UNION simple_expr   (rule 36)
    simple_expr  ->  simple_expr . SETIN simple_expr   (rule 37)

    AND 	shift, and go to state 123
    EQUAL	shift, and go to state 124
    LT  	shift, and go to state 125
    GT  	shift, and go to state 126
    LE  	shift, and go to state 127
    GE  	shift, and go to state 128
    UNION	shift, and go to state 129
    SETIN	shift, and go to state 130
    MOD 	shift, and go to state 131
    PLUS	shift, and go to state 132
    MINUS	shift, and go to state 133
    TIMES	shift, and go to state 134
    DIVIDE	shift, and go to state 135

    $default	reduce using rule 22 (simple_expr)



state 148

    simple_expr  ->  simple_expr . IMPLIES simple_expr   (rule 20)
    simple_expr  ->  simple_expr . IFF simple_expr   (rule 21)
    simple_expr  ->  simple_expr . OR simple_expr   (rule 22)
    simple_expr  ->  simple_expr . AND simple_expr   (rule 23)
    simple_expr  ->  simple_expr AND simple_expr .   (rule 23)
    simple_expr  ->  simple_expr . PLUS simple_expr   (rule 25)
    simple_expr  ->  simple_expr . MINUS simple_expr   (rule 26)
    simple_expr  ->  simple_expr . TIMES simple_expr   (rule 27)
    simple_expr  ->  simple_expr . DIVIDE simple_expr   (rule 28)
    simple_expr  ->  simple_expr . MOD simple_expr   (rule 29)
    simple_expr  ->  simple_expr . EQUAL simple_expr   (rule 30)
    simple_expr  ->  simple_expr . LT simple_expr   (rule 31)
    simple_expr  ->  simple_expr . GT simple_expr   (rule 32)
    simple_expr  ->  simple_expr . LE simple_expr   (rule 33)
    simple_expr  ->  simple_expr . GE simple_expr   (rule 34)
    simple_expr  ->  simple_expr . UNION simple_expr   (rule 36)
    simple_expr  ->  simple_expr . SETIN simple_expr   (rule 37)

    EQUAL	shift, and go to state 124
    LT  	shift, and go to state 125
    GT  	shift, and go to state 126
    LE  	shift, and go to state 127
    GE  	shift, and go to state 128
    UNION	shift, and go to state 129
    SETIN	shift, and go to state 130
    MOD 	shift, and go to state 131
    PLUS	shift, and go to state 132
    MINUS	shift, and go to state 133
    TIMES	shift, and go to state 134
    DIVIDE	shift, and go to state 135

    $default	reduce using rule 23 (simple_expr)



state 149

    simple_expr  ->  simple_expr . IMPLIES simple_expr   (rule 20)
    simple_expr  ->  simple_expr . IFF simple_expr   (rule 21)
    simple_expr  ->  simple_expr . OR simple_expr   (rule 22)
    simple_expr  ->  simple_expr . AND simple_expr   (rule 23)
    simple_expr  ->  simple_expr . PLUS simple_expr   (rule 25)
    simple_expr  ->  simple_expr . MINUS simple_expr   (rule 26)
    simple_expr  ->  simple_expr . TIMES simple_expr   (rule 27)
    simple_expr  ->  simple_expr . DIVIDE simple_expr   (rule 28)
    simple_expr  ->  simple_expr . MOD simple_expr   (rule 29)
    simple_expr  ->  simple_expr . EQUAL simple_expr   (rule 30)
    simple_expr  ->  simple_expr EQUAL simple_expr .   (rule 30)
    simple_expr  ->  simple_expr . LT simple_expr   (rule 31)
    simple_expr  ->  simple_expr . GT simple_expr   (rule 32)
    simple_expr  ->  simple_expr . LE simple_expr   (rule 33)
    simple_expr  ->  simple_expr . GE simple_expr   (rule 34)
    simple_expr  ->  simple_expr . UNION simple_expr   (rule 36)
    simple_expr  ->  simple_expr . SETIN simple_expr   (rule 37)

    UNION	shift, and go to state 129
    SETIN	shift, and go to state 130
    MOD 	shift, and go to state 131
    PLUS	shift, and go to state 132
    MINUS	shift, and go to state 133
    TIMES	shift, and go to state 134
    DIVIDE	shift, and go to state 135

    $default	reduce using rule 30 (simple_expr)



state 150

    simple_expr  ->  simple_expr . IMPLIES simple_expr   (rule 20)
    simple_expr  ->  simple_expr . IFF simple_expr   (rule 21)
    simple_expr  ->  simple_expr . OR simple_expr   (rule 22)
    simple_expr  ->  simple_expr . AND simple_expr   (rule 23)
    simple_expr  ->  simple_expr . PLUS simple_expr   (rule 25)
    simple_expr  ->  simple_expr . MINUS simple_expr   (rule 26)
    simple_expr  ->  simple_expr . TIMES simple_expr   (rule 27)
    simple_expr  ->  simple_expr . DIVIDE simple_expr   (rule 28)
    simple_expr  ->  simple_expr . MOD simple_expr   (rule 29)
    simple_expr  ->  simple_expr . EQUAL simple_expr   (rule 30)
    simple_expr  ->  simple_expr . LT simple_expr   (rule 31)
    simple_expr  ->  simple_expr LT simple_expr .   (rule 31)
    simple_expr  ->  simple_expr . GT simple_expr   (rule 32)
    simple_expr  ->  simple_expr . LE simple_expr   (rule 33)
    simple_expr  ->  simple_expr . GE simple_expr   (rule 34)
    simple_expr  ->  simple_expr . UNION simple_expr   (rule 36)
    simple_expr  ->  simple_expr . SETIN simple_expr   (rule 37)

    UNION	shift, and go to state 129
    SETIN	shift, and go to state 130
    MOD 	shift, and go to state 131
    PLUS	shift, and go to state 132
    MINUS	shift, and go to state 133
    TIMES	shift, and go to state 134
    DIVIDE	shift, and go to state 135

    $default	reduce using rule 31 (simple_expr)



state 151

    simple_expr  ->  simple_expr . IMPLIES simple_expr   (rule 20)
    simple_expr  ->  simple_expr . IFF simple_expr   (rule 21)
    simple_expr  ->  simple_expr . OR simple_expr   (rule 22)
    simple_expr  ->  simple_expr . AND simple_expr   (rule 23)
    simple_expr  ->  simple_expr . PLUS simple_expr   (rule 25)
    simple_expr  ->  simple_expr . MINUS simple_expr   (rule 26)
    simple_expr  ->  simple_expr . TIMES simple_expr   (rule 27)
    simple_expr  ->  simple_expr . DIVIDE simple_expr   (rule 28)
    simple_expr  ->  simple_expr . MOD simple_expr   (rule 29)
    simple_expr  ->  simple_expr . EQUAL simple_expr   (rule 30)
    simple_expr  ->  simple_expr . LT simple_expr   (rule 31)
    simple_expr  ->  simple_expr . GT simple_expr   (rule 32)
    simple_expr  ->  simple_expr GT simple_expr .   (rule 32)
    simple_expr  ->  simple_expr . LE simple_expr   (rule 33)
    simple_expr  ->  simple_expr . GE simple_expr   (rule 34)
    simple_expr  ->  simple_expr . UNION simple_expr   (rule 36)
    simple_expr  ->  simple_expr . SETIN simple_expr   (rule 37)

    UNION	shift, and go to state 129
    SETIN	shift, and go to state 130
    MOD 	shift, and go to state 131
    PLUS	shift, and go to state 132
    MINUS	shift, and go to state 133
    TIMES	shift, and go to state 134
    DIVIDE	shift, and go to state 135

    $default	reduce using rule 32 (simple_expr)



state 152

    simple_expr  ->  simple_expr . IMPLIES simple_expr   (rule 20)
    simple_expr  ->  simple_expr . IFF simple_expr   (rule 21)
    simple_expr  ->  simple_expr . OR simple_expr   (rule 22)
    simple_expr  ->  simple_expr . AND simple_expr   (rule 23)
    simple_expr  ->  simple_expr . PLUS simple_expr   (rule 25)
    simple_expr  ->  simple_expr . MINUS simple_expr   (rule 26)
    simple_expr  ->  simple_expr . TIMES simple_expr   (rule 27)
    simple_expr  ->  simple_expr . DIVIDE simple_expr   (rule 28)
    simple_expr  ->  simple_expr . MOD simple_expr   (rule 29)
    simple_expr  ->  simple_expr . EQUAL simple_expr   (rule 30)
    simple_expr  ->  simple_expr . LT simple_expr   (rule 31)
    simple_expr  ->  simple_expr . GT simple_expr   (rule 32)
    simple_expr  ->  simple_expr . LE simple_expr   (rule 33)
    simple_expr  ->  simple_expr LE simple_expr .   (rule 33)
    simple_expr  ->  simple_expr . GE simple_expr   (rule 34)
    simple_expr  ->  simple_expr . UNION simple_expr   (rule 36)
    simple_expr  ->  simple_expr . SETIN simple_expr   (rule 37)

    UNION	shift, and go to state 129
    SETIN	shift, and go to state 130
    MOD 	shift, and go to state 131
    PLUS	shift, and go to state 132
    MINUS	shift, and go to state 133
    TIMES	shift, and go to state 134
    DIVIDE	shift, and go to state 135

    $default	reduce using rule 33 (simple_expr)



state 153

    simple_expr  ->  simple_expr . IMPLIES simple_expr   (rule 20)
    simple_expr  ->  simple_expr . IFF simple_expr   (rule 21)
    simple_expr  ->  simple_expr . OR simple_expr   (rule 22)
    simple_expr  ->  simple_expr . AND simple_expr   (rule 23)
    simple_expr  ->  simple_expr . PLUS simple_expr   (rule 25)
    simple_expr  ->  simple_expr . MINUS simple_expr   (rule 26)
    simple_expr  ->  simple_expr . TIMES simple_expr   (rule 27)
    simple_expr  ->  simple_expr . DIVIDE simple_expr   (rule 28)
    simple_expr  ->  simple_expr . MOD simple_expr   (rule 29)
    simple_expr  ->  simple_expr . EQUAL simple_expr   (rule 30)
    simple_expr  ->  simple_expr . LT simple_expr   (rule 31)
    simple_expr  ->  simple_expr . GT simple_expr   (rule 32)
    simple_expr  ->  simple_expr . LE simple_expr   (rule 33)
    simple_expr  ->  simple_expr . GE simple_expr   (rule 34)
    simple_expr  ->  simple_expr GE simple_expr .   (rule 34)
    simple_expr  ->  simple_expr . UNION simple_expr   (rule 36)
    simple_expr  ->  simple_expr . SETIN simple_expr   (rule 37)

    UNION	shift, and go to state 129
    SETIN	shift, and go to state 130
    MOD 	shift, and go to state 131
    PLUS	shift, and go to state 132
    MINUS	shift, and go to state 133
    TIMES	shift, and go to state 134
    DIVIDE	shift, and go to state 135

    $default	reduce using rule 34 (simple_expr)



state 154

    simple_expr  ->  simple_expr . IMPLIES simple_expr   (rule 20)
    simple_expr  ->  simple_expr . IFF simple_expr   (rule 21)
    simple_expr  ->  simple_expr . OR simple_expr   (rule 22)
    simple_expr  ->  simple_expr . AND simple_expr   (rule 23)
    simple_expr  ->  simple_expr . PLUS simple_expr   (rule 25)
    simple_expr  ->  simple_expr . MINUS simple_expr   (rule 26)
    simple_expr  ->  simple_expr . TIMES simple_expr   (rule 27)
    simple_expr  ->  simple_expr . DIVIDE simple_expr   (rule 28)
    simple_expr  ->  simple_expr . MOD simple_expr   (rule 29)
    simple_expr  ->  simple_expr . EQUAL simple_expr   (rule 30)
    simple_expr  ->  simple_expr . LT simple_expr   (rule 31)
    simple_expr  ->  simple_expr . GT simple_expr   (rule 32)
    simple_expr  ->  simple_expr . LE simple_expr   (rule 33)
    simple_expr  ->  simple_expr . GE simple_expr   (rule 34)
    simple_expr  ->  simple_expr . UNION simple_expr   (rule 36)
    simple_expr  ->  simple_expr UNION simple_expr .   (rule 36)
    simple_expr  ->  simple_expr . SETIN simple_expr   (rule 37)

    SETIN	shift, and go to state 130
    MOD 	shift, and go to state 131
    PLUS	shift, and go to state 132
    MINUS	shift, and go to state 133
    TIMES	shift, and go to state 134
    DIVIDE	shift, and go to state 135

    $default	reduce using rule 36 (simple_expr)



state 155

    simple_expr  ->  simple_expr . IMPLIES simple_expr   (rule 20)
    simple_expr  ->  simple_expr . IFF simple_expr   (rule 21)
    simple_expr  ->  simple_expr . OR simple_expr   (rule 22)
    simple_expr  ->  simple_expr . AND simple_expr   (rule 23)
    simple_expr  ->  simple_expr . PLUS simple_expr   (rule 25)
    simple_expr  ->  simple_expr . MINUS simple_expr   (rule 26)
    simple_expr  ->  simple_expr . TIMES simple_expr   (rule 27)
    simple_expr  ->  simple_expr . DIVIDE simple_expr   (rule 28)
    simple_expr  ->  simple_expr . MOD simple_expr   (rule 29)
    simple_expr  ->  simple_expr . EQUAL simple_expr   (rule 30)
    simple_expr  ->  simple_expr . LT simple_expr   (rule 31)
    simple_expr  ->  simple_expr . GT simple_expr   (rule 32)
    simple_expr  ->  simple_expr . LE simple_expr   (rule 33)
    simple_expr  ->  simple_expr . GE simple_expr   (rule 34)
    simple_expr  ->  simple_expr . UNION simple_expr   (rule 36)
    simple_expr  ->  simple_expr . SETIN simple_expr   (rule 37)
    simple_expr  ->  simple_expr SETIN simple_expr .   (rule 37)

    MOD 	shift, and go to state 131
    PLUS	shift, and go to state 132
    MINUS	shift, and go to state 133
    TIMES	shift, and go to state 134
    DIVIDE	shift, and go to state 135

    $default	reduce using rule 37 (simple_expr)



state 156

    simple_expr  ->  simple_expr . IMPLIES simple_expr   (rule 20)
    simple_expr  ->  simple_expr . IFF simple_expr   (rule 21)
    simple_expr  ->  simple_expr . OR simple_expr   (rule 22)
    simple_expr  ->  simple_expr . AND simple_expr   (rule 23)
    simple_expr  ->  simple_expr . PLUS simple_expr   (rule 25)
    simple_expr  ->  simple_expr . MINUS simple_expr   (rule 26)
    simple_expr  ->  simple_expr . TIMES simple_expr   (rule 27)
    simple_expr  ->  simple_expr . DIVIDE simple_expr   (rule 28)
    simple_expr  ->  simple_expr . MOD simple_expr   (rule 29)
    simple_expr  ->  simple_expr MOD simple_expr .   (rule 29)
    simple_expr  ->  simple_expr . EQUAL simple_expr   (rule 30)
    simple_expr  ->  simple_expr . LT simple_expr   (rule 31)
    simple_expr  ->  simple_expr . GT simple_expr   (rule 32)
    simple_expr  ->  simple_expr . LE simple_expr   (rule 33)
    simple_expr  ->  simple_expr . GE simple_expr   (rule 34)
    simple_expr  ->  simple_expr . UNION simple_expr   (rule 36)
    simple_expr  ->  simple_expr . SETIN simple_expr   (rule 37)

    PLUS	shift, and go to state 132
    MINUS	shift, and go to state 133
    TIMES	shift, and go to state 134
    DIVIDE	shift, and go to state 135

    $default	reduce using rule 29 (simple_expr)



state 157

    simple_expr  ->  simple_expr . IMPLIES simple_expr   (rule 20)
    simple_expr  ->  simple_expr . IFF simple_expr   (rule 21)
    simple_expr  ->  simple_expr . OR simple_expr   (rule 22)
    simple_expr  ->  simple_expr . AND simple_expr   (rule 23)
    simple_expr  ->  simple_expr . PLUS simple_expr   (rule 25)
    simple_expr  ->  simple_expr PLUS simple_expr .   (rule 25)
    simple_expr  ->  simple_expr . MINUS simple_expr   (rule 26)
    simple_expr  ->  simple_expr . TIMES simple_expr   (rule 27)
    simple_expr  ->  simple_expr . DIVIDE simple_expr   (rule 28)
    simple_expr  ->  simple_expr . MOD simple_expr   (rule 29)
    simple_expr  ->  simple_expr . EQUAL simple_expr   (rule 30)
    simple_expr  ->  simple_expr . LT simple_expr   (rule 31)
    simple_expr  ->  simple_expr . GT simple_expr   (rule 32)
    simple_expr  ->  simple_expr . LE simple_expr   (rule 33)
    simple_expr  ->  simple_expr . GE simple_expr   (rule 34)
    simple_expr  ->  simple_expr . UNION simple_expr   (rule 36)
    simple_expr  ->  simple_expr . SETIN simple_expr   (rule 37)

    TIMES	shift, and go to state 134
    DIVIDE	shift, and go to state 135

    $default	reduce using rule 25 (simple_expr)



state 158

    simple_expr  ->  simple_expr . IMPLIES simple_expr   (rule 20)
    simple_expr  ->  simple_expr . IFF simple_expr   (rule 21)
    simple_expr  ->  simple_expr . OR simple_expr   (rule 22)
    simple_expr  ->  simple_expr . AND simple_expr   (rule 23)
    simple_expr  ->  simple_expr . PLUS simple_expr   (rule 25)
    simple_expr  ->  simple_expr . MINUS simple_expr   (rule 26)
    simple_expr  ->  simple_expr MINUS simple_expr .   (rule 26)
    simple_expr  ->  simple_expr . TIMES simple_expr   (rule 27)
    simple_expr  ->  simple_expr . DIVIDE simple_expr   (rule 28)
    simple_expr  ->  simple_expr . MOD simple_expr   (rule 29)
    simple_expr  ->  simple_expr . EQUAL simple_expr   (rule 30)
    simple_expr  ->  simple_expr . LT simple_expr   (rule 31)
    simple_expr  ->  simple_expr . GT simple_expr   (rule 32)
    simple_expr  ->  simple_expr . LE simple_expr   (rule 33)
    simple_expr  ->  simple_expr . GE simple_expr   (rule 34)
    simple_expr  ->  simple_expr . UNION simple_expr   (rule 36)
    simple_expr  ->  simple_expr . SETIN simple_expr   (rule 37)

    TIMES	shift, and go to state 134
    DIVIDE	shift, and go to state 135

    $default	reduce using rule 26 (simple_expr)



state 159

    simple_expr  ->  simple_expr . IMPLIES simple_expr   (rule 20)
    simple_expr  ->  simple_expr . IFF simple_expr   (rule 21)
    simple_expr  ->  simple_expr . OR simple_expr   (rule 22)
    simple_expr  ->  simple_expr . AND simple_expr   (rule 23)
    simple_expr  ->  simple_expr . PLUS simple_expr   (rule 25)
    simple_expr  ->  simple_expr . MINUS simple_expr   (rule 26)
    simple_expr  ->  simple_expr . TIMES simple_expr   (rule 27)
    simple_expr  ->  simple_expr TIMES simple_expr .   (rule 27)
    simple_expr  ->  simple_expr . DIVIDE simple_expr   (rule 28)
    simple_expr  ->  simple_expr . MOD simple_expr   (rule 29)
    simple_expr  ->  simple_expr . EQUAL simple_expr   (rule 30)
    simple_expr  ->  simple_expr . LT simple_expr   (rule 31)
    simple_expr  ->  simple_expr . GT simple_expr   (rule 32)
    simple_expr  ->  simple_expr . LE simple_expr   (rule 33)
    simple_expr  ->  simple_expr . GE simple_expr   (rule 34)
    simple_expr  ->  simple_expr . UNION simple_expr   (rule 36)
    simple_expr  ->  simple_expr . SETIN simple_expr   (rule 37)


    $default	reduce using rule 27 (simple_expr)



state 160

    simple_expr  ->  simple_expr . IMPLIES simple_expr   (rule 20)
    simple_expr  ->  simple_expr . IFF simple_expr   (rule 21)
    simple_expr  ->  simple_expr . OR simple_expr   (rule 22)
    simple_expr  ->  simple_expr . AND simple_expr   (rule 23)
    simple_expr  ->  simple_expr . PLUS simple_expr   (rule 25)
    simple_expr  ->  simple_expr . MINUS simple_expr   (rule 26)
    simple_expr  ->  simple_expr . TIMES simple_expr   (rule 27)
    simple_expr  ->  simple_expr . DIVIDE simple_expr   (rule 28)
    simple_expr  ->  simple_expr DIVIDE simple_expr .   (rule 28)
    simple_expr  ->  simple_expr . MOD simple_expr   (rule 29)
    simple_expr  ->  simple_expr . EQUAL simple_expr   (rule 30)
    simple_expr  ->  simple_expr . LT simple_expr   (rule 31)
    simple_expr  ->  simple_expr . GT simple_expr   (rule 32)
    simple_expr  ->  simple_expr . LE simple_expr   (rule 33)
    simple_expr  ->  simple_expr . GE simple_expr   (rule 34)
    simple_expr  ->  simple_expr . UNION simple_expr   (rule 36)
    simple_expr  ->  simple_expr . SETIN simple_expr   (rule 37)


    $default	reduce using rule 28 (simple_expr)



state 161

    ctl_expr  ->  EE LB ctl_expr UNTIL ctl_expr RB .   (rule 75)

    $default	reduce using rule 75 (ctl_expr)



state 162

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)
    ctl_expr  ->  EE LB ctl_expr BUNTIL subrange ctl_expr . RB   (rule 77)

    RB  	shift, and go to state 167
    IMPLIES	shift, and go to state 54
    IFF 	shift, and go to state 55
    OR  	shift, and go to state 56
    AND 	shift, and go to state 57
    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69



state 163

    ctl_expr  ->  AA LB ctl_expr UNTIL ctl_expr RB .   (rule 74)

    $default	reduce using rule 74 (ctl_expr)



state 164

    ctl_expr  ->  ctl_expr . IMPLIES ctl_expr   (rule 50)
    ctl_expr  ->  ctl_expr . IFF ctl_expr   (rule 51)
    ctl_expr  ->  ctl_expr . OR ctl_expr   (rule 52)
    ctl_expr  ->  ctl_expr . AND ctl_expr   (rule 53)
    ctl_expr  ->  ctl_expr . PLUS ctl_expr   (rule 55)
    ctl_expr  ->  ctl_expr . MINUS ctl_expr   (rule 56)
    ctl_expr  ->  ctl_expr . TIMES ctl_expr   (rule 57)
    ctl_expr  ->  ctl_expr . DIVIDE ctl_expr   (rule 58)
    ctl_expr  ->  ctl_expr . MOD ctl_expr   (rule 59)
    ctl_expr  ->  ctl_expr . EQUAL ctl_expr   (rule 60)
    ctl_expr  ->  ctl_expr . LT ctl_expr   (rule 61)
    ctl_expr  ->  ctl_expr . GT ctl_expr   (rule 62)
    ctl_expr  ->  ctl_expr . LE ctl_expr   (rule 63)
    ctl_expr  ->  ctl_expr . GE ctl_expr   (rule 64)
    ctl_expr  ->  ctl_expr . UNION ctl_expr   (rule 66)
    ctl_expr  ->  ctl_expr . SETIN ctl_expr   (rule 67)
    ctl_expr  ->  AA LB ctl_expr BUNTIL subrange ctl_expr . RB   (rule 76)

    RB  	shift, and go to state 168
    IMPLIES	shift, and go to state 54
    IFF 	shift, and go to state 55
    OR  	shift, and go to state 56
    AND 	shift, and go to state 57
    EQUAL	shift, and go to state 58
    LT  	shift, and go to state 59
    GT  	shift, and go to state 60
    LE  	shift, and go to state 61
    GE  	shift, and go to state 62
    UNION	shift, and go to state 63
    SETIN	shift, and go to state 64
    MOD 	shift, and go to state 65
    PLUS	shift, and go to state 66
    MINUS	shift, and go to state 67
    TIMES	shift, and go to state 68
    DIVIDE	shift, and go to state 69



state 165

    simple_expr  ->  SIGMA LB ATOM EQUAL . subrange RB simple_expr   (rule 39)

    NUMBER	shift, and go to state 8
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 169
    number	go to state 45



state 166

    simple_expr  ->  simple_expr . IMPLIES simple_expr   (rule 20)
    simple_expr  ->  simple_expr . IFF simple_expr   (rule 21)
    simple_expr  ->  simple_expr . OR simple_expr   (rule 22)
    simple_expr  ->  simple_expr . AND simple_expr   (rule 23)
    simple_expr  ->  simple_expr . PLUS simple_expr   (rule 25)
    simple_expr  ->  simple_expr . MINUS simple_expr   (rule 26)
    simple_expr  ->  simple_expr . TIMES simple_expr   (rule 27)
    simple_expr  ->  simple_expr . DIVIDE simple_expr   (rule 28)
    simple_expr  ->  simple_expr . MOD simple_expr   (rule 29)
    simple_expr  ->  simple_expr . EQUAL simple_expr   (rule 30)
    simple_expr  ->  simple_expr . LT simple_expr   (rule 31)
    simple_expr  ->  simple_expr . GT simple_expr   (rule 32)
    simple_expr  ->  simple_expr . LE simple_expr   (rule 33)
    simple_expr  ->  simple_expr . GE simple_expr   (rule 34)
    simple_expr  ->  simple_expr . UNION simple_expr   (rule 36)
    simple_expr  ->  simple_expr . SETIN simple_expr   (rule 37)
    s_case_list  ->  simple_expr COLON simple_expr . SEMI s_case_list   (rule 43)

    SEMI	shift, and go to state 170
    IMPLIES	shift, and go to state 120
    IFF 	shift, and go to state 121
    OR  	shift, and go to state 122
    AND 	shift, and go to state 123
    EQUAL	shift, and go to state 124
    LT  	shift, and go to state 125
    GT  	shift, and go to state 126
    LE  	shift, and go to state 127
    GE  	shift, and go to state 128
    UNION	shift, and go to state 129
    SETIN	shift, and go to state 130
    MOD 	shift, and go to state 131
    PLUS	shift, and go to state 132
    MINUS	shift, and go to state 133
    TIMES	shift, and go to state 134
    DIVIDE	shift, and go to state 135



state 167

    ctl_expr  ->  EE LB ctl_expr BUNTIL subrange ctl_expr RB .   (rule 77)

    $default	reduce using rule 77 (ctl_expr)



state 168

    ctl_expr  ->  AA LB ctl_expr BUNTIL subrange ctl_expr RB .   (rule 76)

    $default	reduce using rule 76 (ctl_expr)



state 169

    simple_expr  ->  SIGMA LB ATOM EQUAL subrange . RB simple_expr   (rule 39)

    RB  	shift, and go to state 171



state 170

    s_case_list  ->  simple_expr COLON simple_expr SEMI . s_case_list   (rule 43)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    $default	reduce using rule 42 (s_case_list)

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 116
    s_case_list	go to state 172



state 171

    simple_expr  ->  SIGMA LB ATOM EQUAL subrange RB . simple_expr   (rule 39)

    LP  	shift, and go to state 80
    LCB 	shift, and go to state 81
    FALSEEXP	shift, and go to state 82
    TRUEEXP	shift, and go to state 83
    SELF	shift, and go to state 6
    SIGMA	shift, and go to state 84
    CASE	shift, and go to state 85
    ATOM	shift, and go to state 7
    NUMBER	shift, and go to state 8
    NOT 	shift, and go to state 86
    PLUS	shift, and go to state 22
    MINUS	shift, and go to state 23

    subrange	go to state 87
    number	go to state 88
    var_id	go to state 89
    simple_expr	go to state 173



state 172

    s_case_list  ->  simple_expr COLON simple_expr SEMI s_case_list .   (rule 43)

    $default	reduce using rule 43 (s_case_list)



state 173

    simple_expr  ->  simple_expr . IMPLIES simple_expr   (rule 20)
    simple_expr  ->  simple_expr . IFF simple_expr   (rule 21)
    simple_expr  ->  simple_expr . OR simple_expr   (rule 22)
    simple_expr  ->  simple_expr . AND simple_expr   (rule 23)
    simple_expr  ->  simple_expr . PLUS simple_expr   (rule 25)
    simple_expr  ->  simple_expr . MINUS simple_expr   (rule 26)
    simple_expr  ->  simple_expr . TIMES simple_expr   (rule 27)
    simple_expr  ->  simple_expr . DIVIDE simple_expr   (rule 28)
    simple_expr  ->  simple_expr . MOD simple_expr   (rule 29)
    simple_expr  ->  simple_expr . EQUAL simple_expr   (rule 30)
    simple_expr  ->  simple_expr . LT simple_expr   (rule 31)
    simple_expr  ->  simple_expr . GT simple_expr   (rule 32)
    simple_expr  ->  simple_expr . LE simple_expr   (rule 33)
    simple_expr  ->  simple_expr . GE simple_expr   (rule 34)
    simple_expr  ->  simple_expr . UNION simple_expr   (rule 36)
    simple_expr  ->  simple_expr . SETIN simple_expr   (rule 37)
    simple_expr  ->  SIGMA LB ATOM EQUAL subrange RB simple_expr .   (rule 39)

    IMPLIES	shift, and go to state 120
    IFF 	shift, and go to state 121
    OR  	shift, and go to state 122
    AND 	shift, and go to state 123
    EQUAL	shift, and go to state 124
    LT  	shift, and go to state 125
    GT  	shift, and go to state 126
    LE  	shift, and go to state 127
    GE  	shift, and go to state 128
    UNION	shift, and go to state 129
    SETIN	shift, and go to state 130
    MOD 	shift, and go to state 131
    PLUS	shift, and go to state 132
    MINUS	shift, and go to state 133
    TIMES	shift, and go to state 134
    DIVIDE	shift, and go to state 135

    $default	reduce using rule 39 (simple_expr)



state 174

    $   	go to state 175



state 175

    $   	go to state 176



state 176

    $default	accept
